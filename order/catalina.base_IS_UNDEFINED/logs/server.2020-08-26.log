2020-08-2615:17:28.136[background-preinit]INFO org.hibernate.validator.internal.util.Version-HV000001: Hibernate Validator 6.1.5.Final
2020-08-2615:17:29.273[main]INFO com.ldh.order.OrderApplication-No active profile set, falling back to default profiles: default
2020-08-2615:17:29.464[background-preinit]INFO org.hibernate.validator.internal.util.Version-HV000001: Hibernate Validator 6.1.5.Final
2020-08-2615:17:29.914[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-2615:17:29.996[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Finished Spring Data repository scanning in 74ms. Found 2 JPA repository interfaces.
2020-08-2615:17:30.004[main]INFO com.ldh.order.OrderApplication-No active profile set, falling back to default profiles: default
2020-08-2615:17:30.245[main]INFO o.springframework.cloud.context.scope.GenericScope-BeanFactory id=0ef59c3a-9c3a-3639-8b3f-1265505f307d
2020-08-2615:17:30.273[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'com.ldh.product.client.ProductClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-2615:17:30.551[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-2615:17:30.633[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Finished Spring Data repository scanning in 72ms. Found 2 JPA repository interfaces.
2020-08-2615:17:30.681[main]INFO o.s.boot.web.embedded.tomcat.TomcatWebServer-Tomcat initialized with port(s): 8082 (http)
2020-08-2615:17:30.694[main]INFO org.apache.coyote.http11.Http11NioProtocol-Initializing ProtocolHandler ["http-nio-8082"]
2020-08-2615:17:30.695[main]INFO org.apache.catalina.core.StandardService-Starting service [Tomcat]
2020-08-2615:17:30.695[main]INFO org.apache.catalina.core.StandardEngine-Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-2615:17:30.825[main]INFO o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]-Initializing Spring embedded WebApplicationContext
2020-08-2615:17:30.826[main]INFO o.s.b.w.s.c.ServletWebServerApplicationContext-Root WebApplicationContext: initialization completed in 1522 ms
2020-08-2615:17:30.852[main]INFO o.springframework.cloud.context.scope.GenericScope-BeanFactory id=0ef59c3a-9c3a-3639-8b3f-1265505f307d
2020-08-2615:17:30.870[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'com.ldh.product.client.ProductClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-2615:17:31.029[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskExecutor-Initializing ExecutorService 'applicationTaskExecutor'
2020-08-2615:17:31.038[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Starting...
2020-08-2615:17:31.168[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Start completed.
2020-08-2615:17:31.178[main]INFO o.s.boot.web.embedded.tomcat.TomcatWebServer-Tomcat initialized with port(s): 8082 (http)
2020-08-2615:17:31.187[main]INFO org.apache.coyote.http11.Http11NioProtocol-Initializing ProtocolHandler ["http-nio-8082"]
2020-08-2615:17:31.188[main]INFO org.apache.catalina.core.StandardService-Starting service [Tomcat]
2020-08-2615:17:31.188[main]INFO org.apache.catalina.core.StandardEngine-Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-2615:17:31.210[task-1]INFO org.hibernate.jpa.internal.util.LogHelper-HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-2615:17:31.283[task-1]INFO org.hibernate.Version-HHH000412: Hibernate ORM core version 5.4.20.Final
2020-08-2615:17:31.332[main]WARN o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration-spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-2615:17:31.426[main]INFO o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]-Initializing Spring embedded WebApplicationContext
2020-08-2615:17:31.427[main]INFO o.s.b.w.s.c.ServletWebServerApplicationContext-Root WebApplicationContext: initialization completed in 1408 ms
2020-08-2615:17:31.440[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-08-2615:17:31.507[task-1]INFO org.hibernate.annotations.common.Version-HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-2615:17:31.664[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskExecutor-Initializing ExecutorService 'applicationTaskExecutor'
2020-08-2615:17:31.673[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Starting...
2020-08-2615:17:31.693[task-1]INFO org.hibernate.dialect.Dialect-HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-08-2615:17:31.786[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Start completed.
2020-08-2615:17:31.824[task-1]INFO org.hibernate.jpa.internal.util.LogHelper-HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-2615:17:31.873[task-1]INFO org.hibernate.Version-HHH000412: Hibernate ORM core version 5.4.20.Final
2020-08-2615:17:31.900[main]WARN o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration-spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-2615:17:31.974[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-08-2615:17:32.017[task-1]INFO org.hibernate.annotations.common.Version-HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-2615:17:32.144[task-1]INFO org.hibernate.dialect.Dialect-HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-08-2615:17:32.447[task-1]INFO o.h.e.t.jta.platform.internal.JtaPlatformInitiator-HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-2615:17:32.456[task-1]INFO o.s.orm.jpa.LocalContainerEntityManagerFactoryBean-Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-2615:17:32.652[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-08-2615:17:32.767[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-08-2615:17:32.768[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-2615:17:32.772[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-08-2615:17:32.772[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-2615:17:32.774[task-1]INFO o.h.e.t.jta.platform.internal.JtaPlatformInitiator-HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-2615:17:32.784[task-1]INFO o.s.orm.jpa.LocalContainerEntityManagerFactoryBean-Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-2615:17:32.959[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-08-2615:17:33.042[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-08-2615:17:33.043[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-2615:17:33.047[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-08-2615:17:33.047[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-2615:17:33.377[main]WARN o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger-You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-2615:17:33.478[main]INFO o.s.cloud.netflix.eureka.InstanceInfoFactory-Setting initial instance status as: STARTING
2020-08-2615:17:33.510[main]INFO com.netflix.discovery.DiscoveryClient-Initializing Eureka in region us-east-1
2020-08-2615:17:33.614[main]WARN o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger-You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-2615:17:33.707[main]INFO o.s.cloud.netflix.eureka.InstanceInfoFactory-Setting initial instance status as: STARTING
2020-08-2615:17:33.748[main]INFO com.netflix.discovery.DiscoveryClient-Initializing Eureka in region us-east-1
2020-08-2615:17:33.886[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using JSON encoding codec LegacyJacksonJson
2020-08-2615:17:33.886[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using JSON decoding codec LegacyJacksonJson
2020-08-2615:17:33.966[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using JSON encoding codec LegacyJacksonJson
2020-08-2615:17:33.966[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using JSON decoding codec LegacyJacksonJson
2020-08-2615:17:34.023[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using XML encoding codec XStreamXml
2020-08-2615:17:34.023[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using XML decoding codec XStreamXml
2020-08-2615:17:34.175[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using XML encoding codec XStreamXml
2020-08-2615:17:34.175[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using XML decoding codec XStreamXml
2020-08-2615:17:34.229[main]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-08-2615:17:34.309[main]INFO com.netflix.discovery.DiscoveryClient-Disable delta property : false
2020-08-2615:17:34.309[main]INFO com.netflix.discovery.DiscoveryClient-Single vip registry refresh property : null
2020-08-2615:17:34.309[main]INFO com.netflix.discovery.DiscoveryClient-Force full registry fetch : false
2020-08-2615:17:34.309[main]INFO com.netflix.discovery.DiscoveryClient-Application is null : false
2020-08-2615:17:34.309[main]INFO com.netflix.discovery.DiscoveryClient-Registered Applications size is zero : true
2020-08-2615:17:34.309[main]INFO com.netflix.discovery.DiscoveryClient-Application version is -1: true
2020-08-2615:17:34.309[main]INFO com.netflix.discovery.DiscoveryClient-Getting all instance registry info from the eureka server
2020-08-2615:17:34.331[main]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-08-2615:17:34.423[main]INFO com.netflix.discovery.DiscoveryClient-Disable delta property : false
2020-08-2615:17:34.423[main]INFO com.netflix.discovery.DiscoveryClient-Single vip registry refresh property : null
2020-08-2615:17:34.423[main]INFO com.netflix.discovery.DiscoveryClient-Force full registry fetch : false
2020-08-2615:17:34.424[main]INFO com.netflix.discovery.DiscoveryClient-Application is null : false
2020-08-2615:17:34.424[main]INFO com.netflix.discovery.DiscoveryClient-Registered Applications size is zero : true
2020-08-2615:17:34.424[main]INFO com.netflix.discovery.DiscoveryClient-Application version is -1: true
2020-08-2615:17:34.424[main]INFO com.netflix.discovery.DiscoveryClient-Getting all instance registry info from the eureka server
2020-08-2615:17:34.456[main]INFO com.netflix.discovery.DiscoveryClient-The response status is 200
2020-08-2615:17:34.459[main]INFO com.netflix.discovery.DiscoveryClient-Starting heartbeat executor: renew interval is: 30
2020-08-2615:17:34.461[main]INFO com.netflix.discovery.InstanceInfoReplicator-InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-2615:17:34.466[main]INFO com.netflix.discovery.DiscoveryClient-Discovery Client initialized at timestamp 1598426254465 with initial instances count: 0
2020-08-2615:17:34.468[main]INFO o.s.c.n.e.serviceregistry.EurekaServiceRegistry-Registering application ORDER with eureka with status UP
2020-08-2615:17:34.468[main]INFO com.netflix.discovery.DiscoveryClient-Saw local status change event StatusChangeEvent [timestamp=1598426254468, current=UP, previous=STARTING]
2020-08-2615:17:34.470[main]INFO org.apache.coyote.http11.Http11NioProtocol-Starting ProtocolHandler ["http-nio-8082"]
2020-08-2615:17:34.485[DiscoveryClient-InstanceInfoReplicator-0]INFO com.netflix.discovery.DiscoveryClient-DiscoveryClient_ORDER/DESKTOP-B4REUBC:order:8082: registering service...
2020-08-2615:17:34.506[main]INFO o.s.boot.web.embedded.tomcat.TomcatWebServer-Tomcat started on port(s): 8082 (http) with context path ''
2020-08-2615:17:34.509[main]INFO o.s.c.n.e.s.EurekaAutoServiceRegistration-Updating port to 8082
2020-08-2615:17:34.546[main]INFO com.netflix.discovery.DiscoveryClient-The response status is 200
2020-08-2615:17:34.549[main]INFO com.netflix.discovery.DiscoveryClient-Starting heartbeat executor: renew interval is: 30
2020-08-2615:17:34.549[DiscoveryClient-InstanceInfoReplicator-0]INFO com.netflix.discovery.DiscoveryClient-DiscoveryClient_ORDER/DESKTOP-B4REUBC:order:8082 - registration status: 204
2020-08-2615:17:34.551[main]INFO com.netflix.discovery.InstanceInfoReplicator-InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-2615:17:34.554[main]INFO com.netflix.discovery.DiscoveryClient-Discovery Client initialized at timestamp 1598426254553 with initial instances count: 0
2020-08-2615:17:34.555[main]INFO o.s.c.n.e.serviceregistry.EurekaServiceRegistry-Registering application ORDER with eureka with status UP
2020-08-2615:17:34.556[main]INFO com.netflix.discovery.DiscoveryClient-Saw local status change event StatusChangeEvent [timestamp=1598426254556, current=UP, previous=STARTING]
2020-08-2615:17:34.557[DiscoveryClient-InstanceInfoReplicator-0]INFO com.netflix.discovery.DiscoveryClient-DiscoveryClient_ORDER/DESKTOP-B4REUBC:order:8082: registering service...
2020-08-2615:17:34.559[main]INFO org.apache.coyote.http11.Http11NioProtocol-Starting ProtocolHandler ["http-nio-8082"]
2020-08-2615:17:34.570[main]WARN o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext-Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8082 is already in use
2020-08-2615:17:34.575[main]INFO o.s.orm.jpa.LocalContainerEntityManagerFactoryBean-Closing JPA EntityManagerFactory for persistence unit 'default'
2020-08-2615:17:34.577[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskExecutor-Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-2615:17:34.577[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Shutdown initiated...
2020-08-2615:17:34.582[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Shutdown completed.
2020-08-2615:17:34.583[main]INFO com.netflix.discovery.DiscoveryClient-Shutting down DiscoveryClient ...
2020-08-2615:17:34.605[DiscoveryClient-InstanceInfoReplicator-0]INFO com.netflix.discovery.DiscoveryClient-DiscoveryClient_ORDER/DESKTOP-B4REUBC:order:8082 - registration status: 204
2020-08-2615:17:34.607[main]INFO com.netflix.discovery.DiscoveryClient-Unregistering ...
2020-08-2615:17:34.611[main]INFO com.netflix.discovery.DiscoveryClient-DiscoveryClient_ORDER/DESKTOP-B4REUBC:order:8082 - deregister  status: 200
2020-08-2615:17:34.619[main]INFO com.netflix.discovery.DiscoveryClient-Completed shut down of DiscoveryClient
2020-08-2615:17:34.619[main]INFO org.apache.coyote.http11.Http11NioProtocol-Pausing ProtocolHandler ["http-nio-8082"]
2020-08-2615:17:34.619[main]INFO org.apache.catalina.core.StandardService-Stopping service [Tomcat]
2020-08-2615:17:34.623[main]INFO org.apache.coyote.http11.Http11NioProtocol-Stopping ProtocolHandler ["http-nio-8082"]
2020-08-2615:17:34.623[main]INFO org.apache.coyote.http11.Http11NioProtocol-Destroying ProtocolHandler ["http-nio-8082"]
2020-08-2615:17:34.630[main]INFO o.s.b.a.l.ConditionEvaluationReportLoggingListener-

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-2615:17:34.631[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-08-2615:17:34.631[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-08-2615:17:34.635[main]ERRORo.s.b.diagnostics.LoggingFailureAnalysisReporter-

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8082 was already in use.

Action:

Identify and stop the process that's listening on port 8082 or configure this application to listen on another port.

2020-08-2615:17:34.640[main]INFO com.ldh.order.OrderApplication-Started OrderApplication in 7.252 seconds (JVM running for 9.77)
2020-08-2615:18:04.459[DiscoveryClient-CacheRefreshExecutor-0]INFO com.netflix.discovery.DiscoveryClient-Disable delta property : false
2020-08-2615:18:04.460[DiscoveryClient-CacheRefreshExecutor-0]INFO com.netflix.discovery.DiscoveryClient-Single vip registry refresh property : null
2020-08-2615:18:04.460[DiscoveryClient-CacheRefreshExecutor-0]INFO com.netflix.discovery.DiscoveryClient-Force full registry fetch : false
2020-08-2615:18:04.460[DiscoveryClient-CacheRefreshExecutor-0]INFO com.netflix.discovery.DiscoveryClient-Application is null : false
2020-08-2615:18:04.460[DiscoveryClient-CacheRefreshExecutor-0]INFO com.netflix.discovery.DiscoveryClient-Registered Applications size is zero : true
2020-08-2615:18:04.460[DiscoveryClient-CacheRefreshExecutor-0]INFO com.netflix.discovery.DiscoveryClient-Application version is -1: false
2020-08-2615:18:04.460[DiscoveryClient-CacheRefreshExecutor-0]INFO com.netflix.discovery.DiscoveryClient-Getting all instance registry info from the eureka server
2020-08-2615:18:04.463[DiscoveryClient-CacheRefreshExecutor-0]INFO com.netflix.discovery.DiscoveryClient-The response status is 200
2020-08-2615:18:04.468[DiscoveryClient-HeartbeatExecutor-0]INFO com.netflix.discovery.DiscoveryClient-DiscoveryClient_ORDER/DESKTOP-B4REUBC:order:8082 - Re-registering apps/ORDER
2020-08-2615:18:04.468[DiscoveryClient-HeartbeatExecutor-0]INFO com.netflix.discovery.DiscoveryClient-DiscoveryClient_ORDER/DESKTOP-B4REUBC:order:8082: registering service...
2020-08-2615:18:04.473[DiscoveryClient-HeartbeatExecutor-0]INFO com.netflix.discovery.DiscoveryClient-DiscoveryClient_ORDER/DESKTOP-B4REUBC:order:8082 - registration status: 204
2020-08-2615:18:08.039[SpringContextShutdownHook]INFO o.s.c.n.e.serviceregistry.EurekaServiceRegistry-Unregistering application ORDER with eureka with status DOWN
2020-08-2615:18:08.039[SpringContextShutdownHook]WARN com.netflix.discovery.DiscoveryClient-Saw local status change event StatusChangeEvent [timestamp=1598426288039, current=DOWN, previous=UP]
2020-08-2615:18:08.039[DiscoveryClient-InstanceInfoReplicator-0]INFO com.netflix.discovery.DiscoveryClient-DiscoveryClient_ORDER/DESKTOP-B4REUBC:order:8082: registering service...
2020-08-2615:18:08.045[DiscoveryClient-InstanceInfoReplicator-0]INFO com.netflix.discovery.DiscoveryClient-DiscoveryClient_ORDER/DESKTOP-B4REUBC:order:8082 - registration status: 204
2020-08-2615:18:08.254[SpringContextShutdownHook]INFO o.s.orm.jpa.LocalContainerEntityManagerFactoryBean-Closing JPA EntityManagerFactory for persistence unit 'default'
2020-08-2615:18:08.256[SpringContextShutdownHook]INFO o.s.scheduling.concurrent.ThreadPoolTaskExecutor-Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-2615:18:08.257[SpringContextShutdownHook]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Shutdown initiated...
2020-08-2615:18:08.266[SpringContextShutdownHook]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Shutdown completed.
2020-08-2615:18:08.267[SpringContextShutdownHook]INFO com.netflix.discovery.DiscoveryClient-Shutting down DiscoveryClient ...
2020-08-2615:18:16.682[background-preinit]INFO org.hibernate.validator.internal.util.Version-HV000001: Hibernate Validator 6.1.5.Final
2020-08-2615:18:17.125[main]INFO com.ldh.order.OrderApplication-No active profile set, falling back to default profiles: default
2020-08-2615:18:17.591[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-2615:18:17.657[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Finished Spring Data repository scanning in 58ms. Found 2 JPA repository interfaces.
2020-08-2615:18:17.831[main]INFO o.springframework.cloud.context.scope.GenericScope-BeanFactory id=0ef59c3a-9c3a-3639-8b3f-1265505f307d
2020-08-2615:18:17.846[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'com.ldh.product.client.ProductClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-2615:18:18.098[main]INFO o.s.boot.web.embedded.tomcat.TomcatWebServer-Tomcat initialized with port(s): 8082 (http)
2020-08-2615:18:18.106[main]INFO org.apache.coyote.http11.Http11NioProtocol-Initializing ProtocolHandler ["http-nio-8082"]
2020-08-2615:18:18.106[main]INFO org.apache.catalina.core.StandardService-Starting service [Tomcat]
2020-08-2615:18:18.107[main]INFO org.apache.catalina.core.StandardEngine-Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-2615:18:18.224[main]INFO o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]-Initializing Spring embedded WebApplicationContext
2020-08-2615:18:18.224[main]INFO o.s.b.w.s.c.ServletWebServerApplicationContext-Root WebApplicationContext: initialization completed in 1087 ms
2020-08-2615:18:18.375[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskExecutor-Initializing ExecutorService 'applicationTaskExecutor'
2020-08-2615:18:18.384[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Starting...
2020-08-2615:18:18.476[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Start completed.
2020-08-2615:18:18.511[task-1]INFO org.hibernate.jpa.internal.util.LogHelper-HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-2615:18:18.557[task-1]INFO org.hibernate.Version-HHH000412: Hibernate ORM core version 5.4.20.Final
2020-08-2615:18:18.577[main]WARN o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration-spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-2615:18:18.656[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-08-2615:18:18.699[task-1]INFO org.hibernate.annotations.common.Version-HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-2615:18:18.804[task-1]INFO org.hibernate.dialect.Dialect-HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-08-2615:18:19.287[task-1]INFO o.h.e.t.jta.platform.internal.JtaPlatformInitiator-HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-2615:18:19.294[task-1]INFO o.s.orm.jpa.LocalContainerEntityManagerFactoryBean-Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-2615:18:19.444[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-08-2615:18:19.532[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-08-2615:18:19.532[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-2615:18:19.536[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-08-2615:18:19.536[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-2615:18:20.046[main]WARN o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger-You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-2615:18:20.121[main]INFO o.s.cloud.netflix.eureka.InstanceInfoFactory-Setting initial instance status as: STARTING
2020-08-2615:18:20.146[main]INFO com.netflix.discovery.DiscoveryClient-Initializing Eureka in region us-east-1
2020-08-2615:18:20.332[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using JSON encoding codec LegacyJacksonJson
2020-08-2615:18:20.332[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using JSON decoding codec LegacyJacksonJson
2020-08-2615:18:20.523[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using XML encoding codec XStreamXml
2020-08-2615:18:20.523[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using XML decoding codec XStreamXml
2020-08-2615:18:20.651[main]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-08-2615:18:20.700[main]INFO com.netflix.discovery.DiscoveryClient-Disable delta property : false
2020-08-2615:18:20.701[main]INFO com.netflix.discovery.DiscoveryClient-Single vip registry refresh property : null
2020-08-2615:18:20.701[main]INFO com.netflix.discovery.DiscoveryClient-Force full registry fetch : false
2020-08-2615:18:20.701[main]INFO com.netflix.discovery.DiscoveryClient-Application is null : false
2020-08-2615:18:20.701[main]INFO com.netflix.discovery.DiscoveryClient-Registered Applications size is zero : true
2020-08-2615:18:20.701[main]INFO com.netflix.discovery.DiscoveryClient-Application version is -1: true
2020-08-2615:18:20.701[main]INFO com.netflix.discovery.DiscoveryClient-Getting all instance registry info from the eureka server
2020-08-2615:18:20.773[main]INFO com.netflix.discovery.DiscoveryClient-The response status is 200
2020-08-2615:18:20.774[main]INFO com.netflix.discovery.DiscoveryClient-Starting heartbeat executor: renew interval is: 30
2020-08-2615:18:20.776[main]INFO com.netflix.discovery.InstanceInfoReplicator-InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-2615:18:20.779[main]INFO com.netflix.discovery.DiscoveryClient-Discovery Client initialized at timestamp 1598426300778 with initial instances count: 0
2020-08-2615:18:20.781[main]INFO o.s.c.n.e.serviceregistry.EurekaServiceRegistry-Registering application ORDER with eureka with status UP
2020-08-2615:18:20.781[main]INFO com.netflix.discovery.DiscoveryClient-Saw local status change event StatusChangeEvent [timestamp=1598426300781, current=UP, previous=STARTING]
2020-08-2615:18:20.783[DiscoveryClient-InstanceInfoReplicator-0]INFO com.netflix.discovery.DiscoveryClient-DiscoveryClient_ORDER/DESKTOP-B4REUBC:order:8082: registering service...
2020-08-2615:18:20.783[main]INFO org.apache.coyote.http11.Http11NioProtocol-Starting ProtocolHandler ["http-nio-8082"]
2020-08-2615:18:20.806[main]INFO o.s.boot.web.embedded.tomcat.TomcatWebServer-Tomcat started on port(s): 8082 (http) with context path ''
2020-08-2615:18:20.807[main]INFO o.s.c.n.e.s.EurekaAutoServiceRegistration-Updating port to 8082
2020-08-2615:18:20.833[DiscoveryClient-InstanceInfoReplicator-0]INFO com.netflix.discovery.DiscoveryClient-DiscoveryClient_ORDER/DESKTOP-B4REUBC:order:8082 - registration status: 204
2020-08-2615:18:20.901[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-08-2615:18:20.901[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-08-2615:18:20.909[main]INFO com.ldh.order.OrderApplication-Started OrderApplication in 4.808 seconds (JVM running for 5.535)
2020-08-2615:18:30.871[http-nio-8082-exec-1]INFO o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]-Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-2615:18:30.871[http-nio-8082-exec-1]INFO org.springframework.web.servlet.DispatcherServlet-Initializing Servlet 'dispatcherServlet'
2020-08-2615:18:30.876[http-nio-8082-exec-1]INFO org.springframework.web.servlet.DispatcherServlet-Completed initialization in 5 ms
2020-08-2615:18:31.003[http-nio-8082-exec-1]INFO com.netflix.config.ChainedDynamicProperty-Flipping property: product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-08-2615:18:31.022[http-nio-8082-exec-1]INFO com.netflix.util.concurrent.ShutdownEnabledTimer-Shutdown hook installed for: NFLoadBalancer-PingTimer-product
2020-08-2615:18:31.023[http-nio-8082-exec-1]INFO com.netflix.loadbalancer.BaseLoadBalancer-Client: product instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=product,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-08-2615:18:31.028[http-nio-8082-exec-1]INFO c.n.loadbalancer.DynamicServerListLoadBalancer-Using serverListUpdater PollingServerListUpdater
2020-08-2615:18:31.031[http-nio-8082-exec-1]INFO c.n.loadbalancer.DynamicServerListLoadBalancer-DynamicServerListLoadBalancer for client product initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=product,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3040f31f
2020-08-2615:18:31.042[http-nio-8082-exec-1]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-08-2615:18:31.042[http-nio-8082-exec-1]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-08-2615:18:31.075[http-nio-8082-exec-1]ERRORcom.ldh.order.exception.GlobExceptionHandler-运行时异常:
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: product
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:90)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy113.productMsg(Unknown Source)
	at com.ldh.order.controller.ClientController.getProductMsg(ClientController.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: product
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	... 55 common frames omitted
2020-08-2615:18:50.776[DiscoveryClient-CacheRefreshExecutor-0]INFO com.netflix.discovery.DiscoveryClient-Disable delta property : false
2020-08-2615:18:50.776[DiscoveryClient-CacheRefreshExecutor-0]INFO com.netflix.discovery.DiscoveryClient-Single vip registry refresh property : null
2020-08-2615:18:50.776[DiscoveryClient-CacheRefreshExecutor-0]INFO com.netflix.discovery.DiscoveryClient-Force full registry fetch : false
2020-08-2615:18:50.776[DiscoveryClient-CacheRefreshExecutor-0]INFO com.netflix.discovery.DiscoveryClient-Application is null : false
2020-08-2615:18:50.776[DiscoveryClient-CacheRefreshExecutor-0]INFO com.netflix.discovery.DiscoveryClient-Registered Applications size is zero : true
2020-08-2615:18:50.776[DiscoveryClient-CacheRefreshExecutor-0]INFO com.netflix.discovery.DiscoveryClient-Application version is -1: false
2020-08-2615:18:50.776[DiscoveryClient-CacheRefreshExecutor-0]INFO com.netflix.discovery.DiscoveryClient-Getting all instance registry info from the eureka server
2020-08-2615:18:50.805[DiscoveryClient-CacheRefreshExecutor-0]INFO com.netflix.discovery.DiscoveryClient-The response status is 200
2020-08-2615:19:18.415[http-nio-8082-exec-2]ERRORcom.ldh.order.exception.GlobExceptionHandler-运行时异常:
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: product
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:90)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy113.productMsg(Unknown Source)
	at com.ldh.order.controller.ClientController.getProductMsg(ClientController.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: product
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	... 55 common frames omitted
2020-08-2615:19:20.383[http-nio-8082-exec-3]ERRORcom.ldh.order.exception.GlobExceptionHandler-运行时异常:
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: product
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:90)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy113.productMsg(Unknown Source)
	at com.ldh.order.controller.ClientController.getProductMsg(ClientController.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: product
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	... 55 common frames omitted
2020-08-2615:19:23.134[http-nio-8082-exec-4]ERRORcom.ldh.order.exception.GlobExceptionHandler-运行时异常:
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: product
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:90)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy113.productMsg(Unknown Source)
	at com.ldh.order.controller.ClientController.getProductMsg(ClientController.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: product
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	... 55 common frames omitted
2020-08-2615:19:39.546[background-preinit]INFO org.hibernate.validator.internal.util.Version-HV000001: Hibernate Validator 6.1.5.Final
2020-08-2615:19:40.011[main]INFO com.ldh.order.OrderApplication-No active profile set, falling back to default profiles: default
2020-08-2615:19:40.463[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-08-2615:19:40.526[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Finished Spring Data repository scanning in 57ms. Found 2 JPA repository interfaces.
2020-08-2615:19:40.703[main]INFO o.springframework.cloud.context.scope.GenericScope-BeanFactory id=0ef59c3a-9c3a-3639-8b3f-1265505f307d
2020-08-2615:19:40.720[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'com.ldh.product.client.ProductClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-2615:19:40.972[main]INFO o.s.boot.web.embedded.tomcat.TomcatWebServer-Tomcat initialized with port(s): 8082 (http)
2020-08-2615:19:40.982[main]INFO org.apache.coyote.http11.Http11NioProtocol-Initializing ProtocolHandler ["http-nio-8082"]
2020-08-2615:19:40.983[main]INFO org.apache.catalina.core.StandardService-Starting service [Tomcat]
2020-08-2615:19:40.983[main]INFO org.apache.catalina.core.StandardEngine-Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-2615:19:41.099[main]INFO o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]-Initializing Spring embedded WebApplicationContext
2020-08-2615:19:41.100[main]INFO o.s.b.w.s.c.ServletWebServerApplicationContext-Root WebApplicationContext: initialization completed in 1075 ms
2020-08-2615:19:41.265[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskExecutor-Initializing ExecutorService 'applicationTaskExecutor'
2020-08-2615:19:41.273[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Starting...
2020-08-2615:19:41.367[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Start completed.
2020-08-2615:19:41.403[task-1]INFO org.hibernate.jpa.internal.util.LogHelper-HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-2615:19:41.448[task-1]INFO org.hibernate.Version-HHH000412: Hibernate ORM core version 5.4.20.Final
2020-08-2615:19:41.469[main]WARN o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration-spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-2615:19:41.544[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-08-2615:19:41.586[task-1]INFO org.hibernate.annotations.common.Version-HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-2615:19:41.691[task-1]INFO org.hibernate.dialect.Dialect-HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-08-2615:19:42.221[task-1]INFO o.h.e.t.jta.platform.internal.JtaPlatformInitiator-HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-2615:19:42.236[task-1]INFO o.s.orm.jpa.LocalContainerEntityManagerFactoryBean-Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-2615:19:42.393[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-08-2615:19:42.473[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-08-2615:19:42.474[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-2615:19:42.477[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-08-2615:19:42.477[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-08-2615:19:42.968[main]WARN o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger-You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-08-2615:19:43.058[main]INFO o.s.cloud.netflix.eureka.InstanceInfoFactory-Setting initial instance status as: STARTING
2020-08-2615:19:43.080[main]INFO com.netflix.discovery.DiscoveryClient-Initializing Eureka in region us-east-1
2020-08-2615:19:43.275[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using JSON encoding codec LegacyJacksonJson
2020-08-2615:19:43.275[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using JSON decoding codec LegacyJacksonJson
2020-08-2615:19:43.465[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using XML encoding codec XStreamXml
2020-08-2615:19:43.465[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using XML decoding codec XStreamXml
2020-08-2615:19:43.594[main]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-08-2615:19:43.644[main]INFO com.netflix.discovery.DiscoveryClient-Disable delta property : false
2020-08-2615:19:43.644[main]INFO com.netflix.discovery.DiscoveryClient-Single vip registry refresh property : null
2020-08-2615:19:43.644[main]INFO com.netflix.discovery.DiscoveryClient-Force full registry fetch : false
2020-08-2615:19:43.645[main]INFO com.netflix.discovery.DiscoveryClient-Application is null : false
2020-08-2615:19:43.645[main]INFO com.netflix.discovery.DiscoveryClient-Registered Applications size is zero : true
2020-08-2615:19:43.645[main]INFO com.netflix.discovery.DiscoveryClient-Application version is -1: true
2020-08-2615:19:43.645[main]INFO com.netflix.discovery.DiscoveryClient-Getting all instance registry info from the eureka server
2020-08-2615:19:43.755[main]INFO com.netflix.discovery.DiscoveryClient-The response status is 200
2020-08-2615:19:43.758[main]INFO com.netflix.discovery.DiscoveryClient-Starting heartbeat executor: renew interval is: 30
2020-08-2615:19:43.760[main]INFO com.netflix.discovery.InstanceInfoReplicator-InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-08-2615:19:43.764[main]INFO com.netflix.discovery.DiscoveryClient-Discovery Client initialized at timestamp 1598426383763 with initial instances count: 2
2020-08-2615:19:43.766[main]INFO o.s.c.n.e.serviceregistry.EurekaServiceRegistry-Registering application ORDER with eureka with status UP
2020-08-2615:19:43.766[main]INFO com.netflix.discovery.DiscoveryClient-Saw local status change event StatusChangeEvent [timestamp=1598426383766, current=UP, previous=STARTING]
2020-08-2615:19:43.767[DiscoveryClient-InstanceInfoReplicator-0]INFO com.netflix.discovery.DiscoveryClient-DiscoveryClient_ORDER/DESKTOP-B4REUBC:order:8082: registering service...
2020-08-2615:19:43.768[main]INFO org.apache.coyote.http11.Http11NioProtocol-Starting ProtocolHandler ["http-nio-8082"]
2020-08-2615:19:43.791[main]INFO o.s.boot.web.embedded.tomcat.TomcatWebServer-Tomcat started on port(s): 8082 (http) with context path ''
2020-08-2615:19:43.792[main]INFO o.s.c.n.e.s.EurekaAutoServiceRegistration-Updating port to 8082
2020-08-2615:19:43.799[DiscoveryClient-InstanceInfoReplicator-0]INFO com.netflix.discovery.DiscoveryClient-DiscoveryClient_ORDER/DESKTOP-B4REUBC:order:8082 - registration status: 204
2020-08-2615:19:43.892[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-08-2615:19:43.892[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-08-2615:19:43.900[main]INFO com.ldh.order.OrderApplication-Started OrderApplication in 4.921 seconds (JVM running for 5.672)
2020-08-2615:19:54.063[http-nio-8082-exec-1]INFO o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]-Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-2615:19:54.063[http-nio-8082-exec-1]INFO org.springframework.web.servlet.DispatcherServlet-Initializing Servlet 'dispatcherServlet'
2020-08-2615:19:54.068[http-nio-8082-exec-1]INFO org.springframework.web.servlet.DispatcherServlet-Completed initialization in 5 ms
2020-08-2615:19:54.194[http-nio-8082-exec-1]INFO com.netflix.config.ChainedDynamicProperty-Flipping property: product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-08-2615:19:54.214[http-nio-8082-exec-1]INFO com.netflix.util.concurrent.ShutdownEnabledTimer-Shutdown hook installed for: NFLoadBalancer-PingTimer-product
2020-08-2615:19:54.215[http-nio-8082-exec-1]INFO com.netflix.loadbalancer.BaseLoadBalancer-Client: product instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=product,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-08-2615:19:54.219[http-nio-8082-exec-1]INFO c.n.loadbalancer.DynamicServerListLoadBalancer-Using serverListUpdater PollingServerListUpdater
2020-08-2615:19:54.238[http-nio-8082-exec-1]INFO com.netflix.config.ChainedDynamicProperty-Flipping property: product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-08-2615:19:54.239[http-nio-8082-exec-1]INFO c.n.loadbalancer.DynamicServerListLoadBalancer-DynamicServerListLoadBalancer for client product initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=product,current list of Servers=[DESKTOP-B4REUBC:8081],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-B4REUBC:8081;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1604464d
2020-08-2615:19:54.250[http-nio-8082-exec-1]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-08-2615:19:54.250[http-nio-8082-exec-1]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-08-2615:19:55.225[PollingServerListUpdater-0]INFO com.netflix.config.ChainedDynamicProperty-Flipping property: product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-08-2615:24:43.647[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-08-2615:24:58.135[http-nio-8082-exec-9]ERRORcom.ldh.order.exception.GlobExceptionHandler-运行时异常:
feign.FeignException$InternalServerError: [500] during [POST] to [http://product/product/decreaseStock] [ProductClient#decreaseStock(List)]: [{"timestamp":"2020-08-26T07:24:58.121+00:00","status":500,"error":"Internal Server Error","trace":"java.lang.RuntimeException: 该商品不存在:1578752279534640618\r\n\tat com.ldh.product.service.impl.PorductIn... (5293 bytes)]
	at feign.FeignException.serverErrorStatus(FeignException.java:231)
	at feign.FeignException.errorStatus(FeignException.java:180)
	at feign.FeignException.errorStatus(FeignException.java:169)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:92)
	at feign.AsyncResponseHandler.handleResponse(AsyncResponseHandler.java:96)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:138)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy113.decreaseStock(Unknown Source)
	at com.ldh.order.service.impl.OrderServiceImpl.create(OrderServiceImpl.java:71)
	at com.ldh.order.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$c99bf2f1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.ldh.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$d183973f.create(<generated>)
	at com.ldh.order.controller.OrderController.create(OrderController.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-08-2615:26:06.326[http-nio-8082-exec-1]DEBUGorg.hibernate.SQL-select orderdetai0_.detail_id as detail_i1_0_0_, orderdetai0_.create_time as create_t2_0_0_, orderdetai0_.order_id as order_id3_0_0_, orderdetai0_.product_icon as product_4_0_0_, orderdetai0_.product_id as product_5_0_0_, orderdetai0_.product_name as product_6_0_0_, orderdetai0_.product_price as product_7_0_0_, orderdetai0_.product_quantity as product_8_0_0_, orderdetai0_.update_time as update_t9_0_0_ from order_detail orderdetai0_ where orderdetai0_.detail_id=?
2020-08-2615:26:06.341[http-nio-8082-exec-1]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [1] as [VARCHAR] - [1598426766302473564]
2020-08-2615:26:06.401[http-nio-8082-exec-1]DEBUGorg.hibernate.SQL-select ordermaste0_.order_id as order_id1_1_0_, ordermaste0_.buyer_address as buyer_ad2_1_0_, ordermaste0_.buyer_name as buyer_na3_1_0_, ordermaste0_.buyer_openid as buyer_op4_1_0_, ordermaste0_.buyer_phone as buyer_ph5_1_0_, ordermaste0_.create_time as create_t6_1_0_, ordermaste0_.order_amount as order_am7_1_0_, ordermaste0_.order_status as order_st8_1_0_, ordermaste0_.pay_status as pay_stat9_1_0_, ordermaste0_.update_time as update_10_1_0_ from order_master ordermaste0_ where ordermaste0_.order_id=?
2020-08-2615:26:06.402[http-nio-8082-exec-1]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [1] as [VARCHAR] - [1598426766290232647]
2020-08-2615:26:06.414[http-nio-8082-exec-1]DEBUGorg.hibernate.SQL-insert into order_detail (create_time, order_id, product_icon, product_id, product_name, product_price, product_quantity, update_time, detail_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-08-2615:26:06.415[http-nio-8082-exec-1]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [1] as [TIMESTAMP] - [null]
2020-08-2615:26:06.415[http-nio-8082-exec-1]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [2] as [VARCHAR] - [1598426766290232647]
2020-08-2615:26:06.416[http-nio-8082-exec-1]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [3] as [VARCHAR] - [//fuss10.elemecdn.com/7/4a/f307f56216b03f067155aec8b124ejpeg.jpeg]
2020-08-2615:26:06.416[http-nio-8082-exec-1]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [4] as [VARCHAR] - [164103465734242707]
2020-08-2615:26:06.416[http-nio-8082-exec-1]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [5] as [VARCHAR] - [蜜汁鸡翅]
2020-08-2615:26:06.416[http-nio-8082-exec-1]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [6] as [NUMERIC] - [1.00]
2020-08-2615:26:06.417[http-nio-8082-exec-1]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [7] as [INTEGER] - [2]
2020-08-2615:26:06.417[http-nio-8082-exec-1]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [8] as [TIMESTAMP] - [null]
2020-08-2615:26:06.417[http-nio-8082-exec-1]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [9] as [VARCHAR] - [1598426766302473564]
2020-08-2615:26:06.420[http-nio-8082-exec-1]DEBUGorg.hibernate.SQL-insert into order_master (buyer_address, buyer_name, buyer_openid, buyer_phone, create_time, order_amount, order_status, pay_status, update_time, order_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-08-2615:26:06.420[http-nio-8082-exec-1]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [1] as [VARCHAR] - [哈尔滨大庆]
2020-08-2615:26:06.420[http-nio-8082-exec-1]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [2] as [VARCHAR] - [果果3]
2020-08-2615:26:06.420[http-nio-8082-exec-1]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [3] as [VARCHAR] - []
2020-08-2615:26:06.421[http-nio-8082-exec-1]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [4] as [VARCHAR] - [13500006666]
2020-08-2615:26:06.421[http-nio-8082-exec-1]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [5] as [TIMESTAMP] - [null]
2020-08-2615:26:06.421[http-nio-8082-exec-1]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [6] as [NUMERIC] - [2.00]
2020-08-2615:26:06.421[http-nio-8082-exec-1]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [7] as [INTEGER] - [0]
2020-08-2615:26:06.421[http-nio-8082-exec-1]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [8] as [INTEGER] - [0]
2020-08-2615:26:06.421[http-nio-8082-exec-1]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [9] as [TIMESTAMP] - [null]
2020-08-2615:26:06.421[http-nio-8082-exec-1]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [10] as [VARCHAR] - [1598426766290232647]
2020-08-2615:27:28.116[http-nio-8082-exec-2]DEBUGorg.hibernate.SQL-select orderdetai0_.detail_id as detail_i1_0_0_, orderdetai0_.create_time as create_t2_0_0_, orderdetai0_.order_id as order_id3_0_0_, orderdetai0_.product_icon as product_4_0_0_, orderdetai0_.product_id as product_5_0_0_, orderdetai0_.product_name as product_6_0_0_, orderdetai0_.product_price as product_7_0_0_, orderdetai0_.product_quantity as product_8_0_0_, orderdetai0_.update_time as update_t9_0_0_ from order_detail orderdetai0_ where orderdetai0_.detail_id=?
2020-08-2615:27:28.117[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [1] as [VARCHAR] - [1598426848115669291]
2020-08-2615:27:28.133[http-nio-8082-exec-2]DEBUGorg.hibernate.SQL-select ordermaste0_.order_id as order_id1_1_0_, ordermaste0_.buyer_address as buyer_ad2_1_0_, ordermaste0_.buyer_name as buyer_na3_1_0_, ordermaste0_.buyer_openid as buyer_op4_1_0_, ordermaste0_.buyer_phone as buyer_ph5_1_0_, ordermaste0_.create_time as create_t6_1_0_, ordermaste0_.order_amount as order_am7_1_0_, ordermaste0_.order_status as order_st8_1_0_, ordermaste0_.pay_status as pay_stat9_1_0_, ordermaste0_.update_time as update_10_1_0_ from order_master ordermaste0_ where ordermaste0_.order_id=?
2020-08-2615:27:28.133[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [1] as [VARCHAR] - [1598426848106527909]
2020-08-2615:27:28.134[http-nio-8082-exec-2]DEBUGorg.hibernate.SQL-insert into order_detail (create_time, order_id, product_icon, product_id, product_name, product_price, product_quantity, update_time, detail_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-08-2615:27:28.135[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [1] as [TIMESTAMP] - [null]
2020-08-2615:27:28.135[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [2] as [VARCHAR] - [1598426848106527909]
2020-08-2615:27:28.135[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [3] as [VARCHAR] - [//fuss10.elemecdn.com/7/4a/f307f56216b03f067155aec8b124ejpeg.jpeg]
2020-08-2615:27:28.135[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [4] as [VARCHAR] - [164103465734242707]
2020-08-2615:27:28.135[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [5] as [VARCHAR] - [蜜汁鸡翅]
2020-08-2615:27:28.135[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [6] as [NUMERIC] - [1.00]
2020-08-2615:27:28.135[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [7] as [INTEGER] - [2]
2020-08-2615:27:28.135[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [8] as [TIMESTAMP] - [null]
2020-08-2615:27:28.135[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [9] as [VARCHAR] - [1598426848115669291]
2020-08-2615:27:28.136[http-nio-8082-exec-2]DEBUGorg.hibernate.SQL-insert into order_master (buyer_address, buyer_name, buyer_openid, buyer_phone, create_time, order_amount, order_status, pay_status, update_time, order_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-08-2615:27:28.136[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [1] as [VARCHAR] - [哈尔滨大庆]
2020-08-2615:27:28.137[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [2] as [VARCHAR] - [果果26]
2020-08-2615:27:28.137[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [3] as [VARCHAR] - []
2020-08-2615:27:28.137[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [4] as [VARCHAR] - [13500006666]
2020-08-2615:27:28.137[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [5] as [TIMESTAMP] - [null]
2020-08-2615:27:28.137[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [6] as [NUMERIC] - [2.00]
2020-08-2615:27:28.137[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [7] as [INTEGER] - [0]
2020-08-2615:27:28.137[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [8] as [INTEGER] - [0]
2020-08-2615:27:28.137[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [9] as [TIMESTAMP] - [null]
2020-08-2615:27:28.137[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [10] as [VARCHAR] - [1598426848106527909]
2020-08-2615:29:43.649[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-08-2615:34:43.651[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-08-2615:39:43.653[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-08-2615:44:43.655[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-08-2615:49:43.657[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-08-2615:54:43.659[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-08-2615:59:43.664[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-08-2616:04:43.666[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-08-2616:09:43.668[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-08-2616:14:43.668[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-08-2616:19:43.670[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-08-2616:24:43.672[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-08-2616:29:43.673[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-08-2616:34:43.674[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-08-2616:39:43.677[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-08-2616:44:43.678[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-08-2616:49:43.681[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-08-2616:54:43.682[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-08-2616:59:43.683[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-08-2617:04:43.685[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
