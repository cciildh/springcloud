2020-09-0109:48:26.805[background-preinit]INFO org.hibernate.validator.internal.util.Version-HV000001: Hibernate Validator 6.1.5.Final
2020-09-0109:48:27.240[main]INFO com.ldh.order.OrderApplication-No active profile set, falling back to default profiles: default
2020-09-0109:48:27.736[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-09-0109:48:27.800[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Finished Spring Data repository scanning in 57ms. Found 2 JPA repository interfaces.
2020-09-0109:48:28.037[main]INFO o.springframework.cloud.context.scope.GenericScope-BeanFactory id=99c34d35-6b15-3d95-a7e1-59552d07ccf0
2020-09-0109:48:28.048[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2020-09-0109:48:28.055[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2020-09-0109:48:28.060[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2020-09-0109:48:28.079[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'com.ldh.product.client.ProductClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0109:48:28.178[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'integrationChannelResolver' of type [org.springframework.integration.support.channel.BeanFactoryChannelResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0109:48:28.181[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0109:48:28.196[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0109:48:28.200[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration' of type [org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0109:48:28.208[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' of type [org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0109:48:28.212[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'mbeanServer' of type [com.sun.jmx.mbeanserver.JmxMBeanServer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0109:48:28.481[main]INFO o.s.boot.web.embedded.tomcat.TomcatWebServer-Tomcat initialized with port(s): 8082 (http)
2020-09-0109:48:28.488[main]INFO org.apache.coyote.http11.Http11NioProtocol-Initializing ProtocolHandler ["http-nio-8082"]
2020-09-0109:48:28.489[main]INFO org.apache.catalina.core.StandardService-Starting service [Tomcat]
2020-09-0109:48:28.489[main]INFO org.apache.catalina.core.StandardEngine-Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-09-0109:48:28.618[main]INFO o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]-Initializing Spring embedded WebApplicationContext
2020-09-0109:48:28.618[main]INFO o.s.b.w.s.c.ServletWebServerApplicationContext-Root WebApplicationContext: initialization completed in 1365 ms
2020-09-0109:48:28.740[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskExecutor-Initializing ExecutorService 'applicationTaskExecutor'
2020-09-0109:48:28.780[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskScheduler-Initializing ExecutorService 'taskScheduler'
2020-09-0109:48:28.788[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Starting...
2020-09-0109:48:28.882[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Start completed.
2020-09-0109:48:28.920[task-1]INFO org.hibernate.jpa.internal.util.LogHelper-HHH000204: Processing PersistenceUnitInfo [name: default]
2020-09-0109:48:28.971[task-1]INFO org.hibernate.Version-HHH000412: Hibernate ORM core version 5.4.20.Final
2020-09-0109:48:29.008[main]WARN o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration-spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-09-0109:48:29.099[task-1]INFO org.hibernate.annotations.common.Version-HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-09-0109:48:29.112[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-09-0109:48:29.205[task-1]INFO org.hibernate.dialect.Dialect-HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-09-0109:48:29.713[task-1]INFO o.h.e.t.jta.platform.internal.JtaPlatformInitiator-HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-09-0109:48:29.720[task-1]INFO o.s.orm.jpa.LocalContainerEntityManagerFactoryBean-Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-0109:48:29.865[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-09-0109:48:30.063[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-09-0109:48:30.063[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-0109:48:30.066[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-09-0109:48:30.066[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-0109:48:30.812[main]WARN o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger-You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-09-0109:48:30.858[main]INFO o.s.c.s.f.FunctionConfiguration$FunctionBindingRegistrar-Functional binding is disabled due to the presense of @EnableBinding annotation in your configuration
2020-09-0109:48:31.036[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel errorChannel
2020-09-0109:48:31.097[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel nullChannel
2020-09-0109:48:31.109[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel StreamLdhMq
2020-09-0109:48:31.138[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageHandler errorLogger
2020-09-0109:48:31.169[main]INFO o.s.c.stream.messaging.DirectWithAttributesChannel-Channel 'application-1.StreamLdhMq' has 1 subscriber(s).
2020-09-0109:48:31.171[main]INFO o.s.integration.endpoint.EventDrivenConsumer-Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2020-09-0109:48:31.171[main]INFO o.s.integration.channel.PublishSubscribeChannel-Channel 'application-1.errorChannel' has 1 subscriber(s).
2020-09-0109:48:31.172[main]INFO o.s.integration.endpoint.EventDrivenConsumer-started bean '_org.springframework.integration.errorLogger'
2020-09-0109:48:31.173[main]INFO o.s.cloud.stream.binder.DefaultBinderFactory-Creating binder: rabbit
2020-09-0109:50:02.117[background-preinit]INFO org.hibernate.validator.internal.util.Version-HV000001: Hibernate Validator 6.1.5.Final
2020-09-0109:50:02.614[main]INFO com.ldh.order.OrderApplication-No active profile set, falling back to default profiles: default
2020-09-0109:50:03.203[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-09-0109:50:03.318[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Finished Spring Data repository scanning in 100ms. Found 2 JPA repository interfaces.
2020-09-0109:50:03.602[main]INFO o.springframework.cloud.context.scope.GenericScope-BeanFactory id=99c34d35-6b15-3d95-a7e1-59552d07ccf0
2020-09-0109:50:03.612[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2020-09-0109:50:03.617[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2020-09-0109:50:03.622[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2020-09-0109:50:03.639[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'com.ldh.product.client.ProductClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0109:50:03.743[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'integrationChannelResolver' of type [org.springframework.integration.support.channel.BeanFactoryChannelResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0109:50:03.745[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0109:50:03.761[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0109:50:03.764[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration' of type [org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0109:50:03.771[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' of type [org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0109:50:03.775[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'mbeanServer' of type [com.sun.jmx.mbeanserver.JmxMBeanServer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0109:50:04.048[main]INFO o.s.boot.web.embedded.tomcat.TomcatWebServer-Tomcat initialized with port(s): 8082 (http)
2020-09-0109:50:04.055[main]INFO org.apache.coyote.http11.Http11NioProtocol-Initializing ProtocolHandler ["http-nio-8082"]
2020-09-0109:50:04.055[main]INFO org.apache.catalina.core.StandardService-Starting service [Tomcat]
2020-09-0109:50:04.055[main]INFO org.apache.catalina.core.StandardEngine-Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-09-0109:50:04.184[main]INFO o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]-Initializing Spring embedded WebApplicationContext
2020-09-0109:50:04.184[main]INFO o.s.b.w.s.c.ServletWebServerApplicationContext-Root WebApplicationContext: initialization completed in 1553 ms
2020-09-0109:50:04.311[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskExecutor-Initializing ExecutorService 'applicationTaskExecutor'
2020-09-0109:50:04.351[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskScheduler-Initializing ExecutorService 'taskScheduler'
2020-09-0109:50:04.358[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Starting...
2020-09-0109:50:04.453[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Start completed.
2020-09-0109:50:04.490[task-1]INFO org.hibernate.jpa.internal.util.LogHelper-HHH000204: Processing PersistenceUnitInfo [name: default]
2020-09-0109:50:04.543[task-1]INFO org.hibernate.Version-HHH000412: Hibernate ORM core version 5.4.20.Final
2020-09-0109:50:04.581[main]WARN o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration-spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-09-0109:50:04.671[task-1]INFO org.hibernate.annotations.common.Version-HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-09-0109:50:04.678[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-09-0109:50:04.773[task-1]INFO org.hibernate.dialect.Dialect-HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-09-0109:50:05.282[task-1]INFO o.h.e.t.jta.platform.internal.JtaPlatformInitiator-HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-09-0109:50:05.289[task-1]INFO o.s.orm.jpa.LocalContainerEntityManagerFactoryBean-Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-0109:50:05.432[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-09-0109:50:05.619[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-09-0109:50:05.620[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-0109:50:05.623[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-09-0109:50:05.623[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-0109:50:06.362[main]WARN o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger-You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-09-0109:50:06.408[main]INFO o.s.c.s.f.FunctionConfiguration$FunctionBindingRegistrar-Functional binding is disabled due to the presense of @EnableBinding annotation in your configuration
2020-09-0109:50:06.579[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel errorChannel
2020-09-0109:50:06.637[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel nullChannel
2020-09-0109:50:06.648[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel StreamLdhMq
2020-09-0109:50:06.678[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageHandler errorLogger
2020-09-0109:50:06.707[main]INFO o.s.c.stream.messaging.DirectWithAttributesChannel-Channel 'application-1.StreamLdhMq' has 1 subscriber(s).
2020-09-0109:50:06.710[main]INFO o.s.integration.endpoint.EventDrivenConsumer-Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2020-09-0109:50:06.710[main]INFO o.s.integration.channel.PublishSubscribeChannel-Channel 'application-1.errorChannel' has 1 subscriber(s).
2020-09-0109:50:06.711[main]INFO o.s.integration.endpoint.EventDrivenConsumer-started bean '_org.springframework.integration.errorLogger'
2020-09-0109:50:06.711[main]INFO o.s.cloud.stream.binder.DefaultBinderFactory-Creating binder: rabbit
2020-09-0110:12:04.102[background-preinit]INFO org.hibernate.validator.internal.util.Version-HV000001: Hibernate Validator 6.1.5.Final
2020-09-0110:12:04.710[main]INFO com.ldh.order.OrderApplication-No active profile set, falling back to default profiles: default
2020-09-0110:12:05.215[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-09-0110:12:05.284[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Finished Spring Data repository scanning in 62ms. Found 2 JPA repository interfaces.
2020-09-0110:12:05.586[main]INFO o.springframework.cloud.context.scope.GenericScope-BeanFactory id=a6f42086-4e0d-3ef4-b06f-8af3f5b5b9eb
2020-09-0110:12:05.598[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2020-09-0110:12:05.606[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2020-09-0110:12:05.612[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2020-09-0110:12:05.636[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'com.ldh.product.client.ProductClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0110:12:05.765[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'integrationChannelResolver' of type [org.springframework.integration.support.channel.BeanFactoryChannelResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0110:12:05.767[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0110:12:05.784[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0110:12:05.787[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration' of type [org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0110:12:05.796[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' of type [org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0110:12:05.800[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'mbeanServer' of type [com.sun.jmx.mbeanserver.JmxMBeanServer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0110:12:06.074[main]INFO o.s.boot.web.embedded.tomcat.TomcatWebServer-Tomcat initialized with port(s): 8082 (http)
2020-09-0110:12:06.081[main]INFO org.apache.coyote.http11.Http11NioProtocol-Initializing ProtocolHandler ["http-nio-8082"]
2020-09-0110:12:06.082[main]INFO org.apache.catalina.core.StandardService-Starting service [Tomcat]
2020-09-0110:12:06.082[main]INFO org.apache.catalina.core.StandardEngine-Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-09-0110:12:06.213[main]INFO o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]-Initializing Spring embedded WebApplicationContext
2020-09-0110:12:06.213[main]INFO o.s.b.w.s.c.ServletWebServerApplicationContext-Root WebApplicationContext: initialization completed in 1490 ms
2020-09-0110:12:06.337[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskExecutor-Initializing ExecutorService 'applicationTaskExecutor'
2020-09-0110:12:06.375[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskScheduler-Initializing ExecutorService 'taskScheduler'
2020-09-0110:12:06.383[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Starting...
2020-09-0110:12:06.476[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Start completed.
2020-09-0110:12:06.513[task-1]INFO org.hibernate.jpa.internal.util.LogHelper-HHH000204: Processing PersistenceUnitInfo [name: default]
2020-09-0110:12:06.564[task-1]INFO org.hibernate.Version-HHH000412: Hibernate ORM core version 5.4.20.Final
2020-09-0110:12:06.600[main]WARN o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration-spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-09-0110:12:06.690[task-1]INFO org.hibernate.annotations.common.Version-HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-09-0110:12:06.699[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-09-0110:12:06.800[task-1]INFO org.hibernate.dialect.Dialect-HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-09-0110:12:07.412[task-1]INFO o.h.e.t.jta.platform.internal.JtaPlatformInitiator-HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-09-0110:12:07.419[task-1]INFO o.s.orm.jpa.LocalContainerEntityManagerFactoryBean-Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-0110:12:07.573[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-09-0110:12:07.779[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-09-0110:12:07.779[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-0110:12:07.783[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-09-0110:12:07.783[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-0110:12:08.542[main]WARN o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger-You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-09-0110:12:08.587[main]INFO o.s.c.s.f.FunctionConfiguration$FunctionBindingRegistrar-Functional binding is disabled due to the presense of @EnableBinding annotation in your configuration
2020-09-0110:12:08.758[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel StreamLdhMq
2020-09-0110:12:08.811[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel nullChannel
2020-09-0110:12:08.822[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel errorChannel
2020-09-0110:12:08.853[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageHandler errorLogger
2020-09-0110:12:08.882[main]INFO o.s.c.stream.messaging.DirectWithAttributesChannel-Channel 'application-1.StreamLdhMq' has 1 subscriber(s).
2020-09-0110:12:08.884[main]INFO o.s.integration.endpoint.EventDrivenConsumer-Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2020-09-0110:12:08.884[main]INFO o.s.integration.channel.PublishSubscribeChannel-Channel 'application-1.errorChannel' has 1 subscriber(s).
2020-09-0110:12:08.884[main]INFO o.s.integration.endpoint.EventDrivenConsumer-started bean '_org.springframework.integration.errorLogger'
2020-09-0110:12:08.885[main]INFO o.s.cloud.stream.binder.DefaultBinderFactory-Creating binder: rabbit
2020-09-0110:27:34.700[background-preinit]INFO org.hibernate.validator.internal.util.Version-HV000001: Hibernate Validator 6.1.5.Final
2020-09-0110:27:35.136[main]INFO com.ldh.order.OrderApplication-No active profile set, falling back to default profiles: default
2020-09-0110:27:35.660[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-09-0110:27:35.721[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Finished Spring Data repository scanning in 56ms. Found 2 JPA repository interfaces.
2020-09-0110:27:35.980[main]INFO o.springframework.cloud.context.scope.GenericScope-BeanFactory id=a6f42086-4e0d-3ef4-b06f-8af3f5b5b9eb
2020-09-0110:27:35.989[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2020-09-0110:27:35.993[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2020-09-0110:27:35.997[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2020-09-0110:27:36.014[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'com.ldh.product.client.ProductClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0110:27:36.118[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'integrationChannelResolver' of type [org.springframework.integration.support.channel.BeanFactoryChannelResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0110:27:36.121[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0110:27:36.138[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0110:27:36.141[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration' of type [org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0110:27:36.149[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' of type [org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0110:27:36.152[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'mbeanServer' of type [com.sun.jmx.mbeanserver.JmxMBeanServer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0110:27:36.422[main]INFO o.s.boot.web.embedded.tomcat.TomcatWebServer-Tomcat initialized with port(s): 8082 (http)
2020-09-0110:27:36.430[main]INFO org.apache.coyote.http11.Http11NioProtocol-Initializing ProtocolHandler ["http-nio-8082"]
2020-09-0110:27:36.430[main]INFO org.apache.catalina.core.StandardService-Starting service [Tomcat]
2020-09-0110:27:36.430[main]INFO org.apache.catalina.core.StandardEngine-Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-09-0110:27:36.564[main]INFO o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]-Initializing Spring embedded WebApplicationContext
2020-09-0110:27:36.564[main]INFO o.s.b.w.s.c.ServletWebServerApplicationContext-Root WebApplicationContext: initialization completed in 1415 ms
2020-09-0110:27:36.695[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskExecutor-Initializing ExecutorService 'applicationTaskExecutor'
2020-09-0110:27:36.737[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskScheduler-Initializing ExecutorService 'taskScheduler'
2020-09-0110:27:36.745[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Starting...
2020-09-0110:27:36.845[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Start completed.
2020-09-0110:27:36.884[task-1]INFO org.hibernate.jpa.internal.util.LogHelper-HHH000204: Processing PersistenceUnitInfo [name: default]
2020-09-0110:27:36.940[task-1]INFO org.hibernate.Version-HHH000412: Hibernate ORM core version 5.4.20.Final
2020-09-0110:27:36.978[main]WARN o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration-spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-09-0110:27:37.066[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-09-0110:27:37.069[task-1]INFO org.hibernate.annotations.common.Version-HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-09-0110:27:37.172[task-1]INFO org.hibernate.dialect.Dialect-HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-09-0110:27:37.695[task-1]INFO o.h.e.t.jta.platform.internal.JtaPlatformInitiator-HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-09-0110:27:37.702[task-1]INFO o.s.orm.jpa.LocalContainerEntityManagerFactoryBean-Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-0110:27:37.850[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-09-0110:27:38.055[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-09-0110:27:38.055[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-0110:27:38.058[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-09-0110:27:38.058[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-0110:27:38.824[main]WARN o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger-You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-09-0110:27:38.871[main]INFO o.s.c.s.f.FunctionConfiguration$FunctionBindingRegistrar-Functional binding is disabled due to the presense of @EnableBinding annotation in your configuration
2020-09-0110:27:39.038[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel StreamLdhMq
2020-09-0110:27:39.092[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel errorChannel
2020-09-0110:27:39.124[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel nullChannel
2020-09-0110:27:39.139[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageHandler errorLogger
2020-09-0110:27:39.170[main]INFO o.s.c.stream.messaging.DirectWithAttributesChannel-Channel 'application-1.StreamLdhMq' has 1 subscriber(s).
2020-09-0110:27:39.172[main]INFO o.s.integration.endpoint.EventDrivenConsumer-Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2020-09-0110:27:39.172[main]INFO o.s.integration.channel.PublishSubscribeChannel-Channel 'application-1.errorChannel' has 1 subscriber(s).
2020-09-0110:27:39.172[main]INFO o.s.integration.endpoint.EventDrivenConsumer-started bean '_org.springframework.integration.errorLogger'
2020-09-0110:27:39.173[main]INFO o.s.cloud.stream.binder.DefaultBinderFactory-Creating binder: rabbit
2020-09-0111:33:45.490[background-preinit]INFO org.hibernate.validator.internal.util.Version-HV000001: Hibernate Validator 6.1.5.Final
2020-09-0111:33:45.981[main]INFO com.ldh.order.OrderApplication-No active profile set, falling back to default profiles: default
2020-09-0111:33:46.564[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-09-0111:33:46.626[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Finished Spring Data repository scanning in 59ms. Found 2 JPA repository interfaces.
2020-09-0111:33:46.908[main]INFO o.springframework.cloud.context.scope.GenericScope-BeanFactory id=a6f42086-4e0d-3ef4-b06f-8af3f5b5b9eb
2020-09-0111:33:46.917[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2020-09-0111:33:46.922[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2020-09-0111:33:46.927[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2020-09-0111:33:46.943[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'com.ldh.product.client.ProductClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0111:33:47.049[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'integrationChannelResolver' of type [org.springframework.integration.support.channel.BeanFactoryChannelResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0111:33:47.053[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0111:33:47.069[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0111:33:47.073[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration' of type [org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0111:33:47.081[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' of type [org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0111:33:47.085[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'mbeanServer' of type [com.sun.jmx.mbeanserver.JmxMBeanServer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0111:33:47.444[main]INFO o.s.boot.web.embedded.tomcat.TomcatWebServer-Tomcat initialized with port(s): 8082 (http)
2020-09-0111:33:47.452[main]INFO org.apache.coyote.http11.Http11NioProtocol-Initializing ProtocolHandler ["http-nio-8082"]
2020-09-0111:33:47.452[main]INFO org.apache.catalina.core.StandardService-Starting service [Tomcat]
2020-09-0111:33:47.452[main]INFO org.apache.catalina.core.StandardEngine-Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-09-0111:33:47.608[main]INFO o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]-Initializing Spring embedded WebApplicationContext
2020-09-0111:33:47.608[main]INFO o.s.b.w.s.c.ServletWebServerApplicationContext-Root WebApplicationContext: initialization completed in 1612 ms
2020-09-0111:33:47.749[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskExecutor-Initializing ExecutorService 'applicationTaskExecutor'
2020-09-0111:33:47.796[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskScheduler-Initializing ExecutorService 'taskScheduler'
2020-09-0111:33:47.808[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Starting...
2020-09-0111:33:47.928[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Start completed.
2020-09-0111:33:47.970[task-1]INFO org.hibernate.jpa.internal.util.LogHelper-HHH000204: Processing PersistenceUnitInfo [name: default]
2020-09-0111:33:48.020[task-1]INFO org.hibernate.Version-HHH000412: Hibernate ORM core version 5.4.20.Final
2020-09-0111:33:48.059[main]WARN o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration-spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-09-0111:33:48.161[task-1]INFO org.hibernate.annotations.common.Version-HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-09-0111:33:48.161[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-09-0111:33:48.279[task-1]INFO org.hibernate.dialect.Dialect-HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-09-0111:33:48.857[task-1]INFO o.h.e.t.jta.platform.internal.JtaPlatformInitiator-HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-09-0111:33:48.865[task-1]INFO o.s.orm.jpa.LocalContainerEntityManagerFactoryBean-Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-0111:33:49.041[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-09-0111:33:49.244[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-09-0111:33:49.244[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-0111:33:49.244[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-09-0111:33:49.244[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-0111:33:50.050[main]WARN o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger-You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-09-0111:33:50.108[main]INFO o.s.c.s.f.FunctionConfiguration$FunctionBindingRegistrar-Functional binding is disabled due to the presense of @EnableBinding annotation in your configuration
2020-09-0111:33:50.272[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel errorChannel
2020-09-0111:33:50.327[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel StreamLdhMq
2020-09-0111:33:50.362[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel nullChannel
2020-09-0111:33:50.378[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageHandler errorLogger
2020-09-0111:33:50.405[main]INFO o.s.c.stream.messaging.DirectWithAttributesChannel-Channel 'application-1.StreamLdhMq' has 1 subscriber(s).
2020-09-0111:33:50.409[main]INFO o.s.integration.endpoint.EventDrivenConsumer-Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2020-09-0111:33:50.409[main]INFO o.s.integration.channel.PublishSubscribeChannel-Channel 'application-1.errorChannel' has 1 subscriber(s).
2020-09-0111:33:50.409[main]INFO o.s.integration.endpoint.EventDrivenConsumer-started bean '_org.springframework.integration.errorLogger'
2020-09-0111:33:50.409[main]INFO o.s.cloud.stream.binder.DefaultBinderFactory-Creating binder: rabbit
2020-09-0114:46:15.610[background-preinit]INFO org.hibernate.validator.internal.util.Version-HV000001: Hibernate Validator 6.1.5.Final
2020-09-0114:46:16.085[main]INFO com.ldh.order.OrderApplication-No active profile set, falling back to default profiles: default
2020-09-0114:46:16.645[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-09-0114:46:16.739[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Finished Spring Data repository scanning in 87ms. Found 2 JPA repository interfaces.
2020-09-0114:46:17.115[main]INFO o.springframework.cloud.context.scope.GenericScope-BeanFactory id=a6f42086-4e0d-3ef4-b06f-8af3f5b5b9eb
2020-09-0114:46:17.124[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2020-09-0114:46:17.129[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2020-09-0114:46:17.133[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2020-09-0114:46:17.149[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'com.ldh.product.client.ProductClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0114:46:17.256[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'integrationChannelResolver' of type [org.springframework.integration.support.channel.BeanFactoryChannelResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0114:46:17.259[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0114:46:17.277[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0114:46:17.281[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration' of type [org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0114:46:17.289[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' of type [org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0114:46:17.292[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'mbeanServer' of type [com.sun.jmx.mbeanserver.JmxMBeanServer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0114:46:17.815[main]INFO o.s.boot.web.embedded.tomcat.TomcatWebServer-Tomcat initialized with port(s): 8082 (http)
2020-09-0114:46:17.823[main]INFO org.apache.coyote.http11.Http11NioProtocol-Initializing ProtocolHandler ["http-nio-8082"]
2020-09-0114:46:17.823[main]INFO org.apache.catalina.core.StandardService-Starting service [Tomcat]
2020-09-0114:46:17.823[main]INFO org.apache.catalina.core.StandardEngine-Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-09-0114:46:17.968[main]INFO o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]-Initializing Spring embedded WebApplicationContext
2020-09-0114:46:17.968[main]INFO o.s.b.w.s.c.ServletWebServerApplicationContext-Root WebApplicationContext: initialization completed in 1869 ms
2020-09-0114:46:18.103[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskExecutor-Initializing ExecutorService 'applicationTaskExecutor'
2020-09-0114:46:18.151[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskScheduler-Initializing ExecutorService 'taskScheduler'
2020-09-0114:46:18.161[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Starting...
2020-09-0114:46:18.275[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Start completed.
2020-09-0114:46:18.321[task-1]INFO org.hibernate.jpa.internal.util.LogHelper-HHH000204: Processing PersistenceUnitInfo [name: default]
2020-09-0114:46:18.390[task-1]INFO org.hibernate.Version-HHH000412: Hibernate ORM core version 5.4.20.Final
2020-09-0114:46:18.433[main]WARN o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration-spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-09-0114:46:18.528[task-1]INFO org.hibernate.annotations.common.Version-HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-09-0114:46:18.535[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-09-0114:46:18.683[task-1]INFO org.hibernate.dialect.Dialect-HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-09-0114:46:19.317[task-1]INFO o.h.e.t.jta.platform.internal.JtaPlatformInitiator-HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-09-0114:46:19.325[task-1]INFO o.s.orm.jpa.LocalContainerEntityManagerFactoryBean-Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-0114:46:19.495[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-09-0114:46:19.711[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-09-0114:46:19.711[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-0114:46:19.715[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-09-0114:46:19.715[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-0114:46:20.512[main]WARN o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger-You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-09-0114:46:20.566[main]INFO o.s.c.s.f.FunctionConfiguration$FunctionBindingRegistrar-Functional binding is disabled due to the presense of @EnableBinding annotation in your configuration
2020-09-0114:46:20.752[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel nullChannel
2020-09-0114:46:20.770[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel StreamLdhMq
2020-09-0114:46:20.823[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel errorChannel
2020-09-0114:46:20.857[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageHandler errorLogger
2020-09-0114:46:20.889[main]INFO o.s.c.stream.messaging.DirectWithAttributesChannel-Channel 'application-1.StreamLdhMq' has 1 subscriber(s).
2020-09-0114:46:20.891[main]INFO o.s.integration.endpoint.EventDrivenConsumer-Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2020-09-0114:46:20.892[main]INFO o.s.integration.channel.PublishSubscribeChannel-Channel 'application-1.errorChannel' has 1 subscriber(s).
2020-09-0114:46:20.892[main]INFO o.s.integration.endpoint.EventDrivenConsumer-started bean '_org.springframework.integration.errorLogger'
2020-09-0114:46:20.893[main]INFO o.s.cloud.stream.binder.DefaultBinderFactory-Creating binder: rabbit
2020-09-0115:35:23.812[background-preinit]INFO org.hibernate.validator.internal.util.Version-HV000001: Hibernate Validator 6.1.5.Final
2020-09-0115:35:24.533[main]INFO com.ldh.order.OrderApplication-No active profile set, falling back to default profiles: default
2020-09-0115:35:25.593[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-09-0115:35:25.698[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Finished Spring Data repository scanning in 95ms. Found 2 JPA repository interfaces.
2020-09-0115:35:26.252[main]INFO o.springframework.cloud.context.scope.GenericScope-BeanFactory id=4641d5b7-bf15-3e82-acb0-89bd62080065
2020-09-0115:35:26.263[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2020-09-0115:35:26.270[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2020-09-0115:35:26.279[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2020-09-0115:35:26.301[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'com.ldh.product.client.ProductClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0115:35:26.461[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0115:35:26.473[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration' of type [org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0115:35:26.482[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' of type [org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0115:35:26.489[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'mbeanServer' of type [com.sun.jmx.mbeanserver.JmxMBeanServer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0115:35:26.532[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'integrationChannelResolver' of type [org.springframework.integration.support.channel.BeanFactoryChannelResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0115:35:26.533[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0115:35:26.924[main]INFO o.s.boot.web.embedded.tomcat.TomcatWebServer-Tomcat initialized with port(s): 8082 (http)
2020-09-0115:35:26.932[main]INFO org.apache.coyote.http11.Http11NioProtocol-Initializing ProtocolHandler ["http-nio-8082"]
2020-09-0115:35:26.935[main]INFO org.apache.catalina.core.StandardService-Starting service [Tomcat]
2020-09-0115:35:26.935[main]INFO org.apache.catalina.core.StandardEngine-Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-09-0115:35:27.112[main]INFO o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]-Initializing Spring embedded WebApplicationContext
2020-09-0115:35:27.112[main]INFO o.s.b.w.s.c.ServletWebServerApplicationContext-Root WebApplicationContext: initialization completed in 2549 ms
2020-09-0115:35:27.252[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskExecutor-Initializing ExecutorService 'applicationTaskExecutor'
2020-09-0115:35:27.301[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskScheduler-Initializing ExecutorService 'taskScheduler'
2020-09-0115:35:27.310[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Starting...
2020-09-0115:35:27.453[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Start completed.
2020-09-0115:35:27.595[task-1]INFO org.hibernate.jpa.internal.util.LogHelper-HHH000204: Processing PersistenceUnitInfo [name: default]
2020-09-0115:35:27.699[main]WARN o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration-spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-09-0115:35:27.778[task-1]INFO org.hibernate.Version-HHH000412: Hibernate ORM core version 5.4.20.Final
2020-09-0115:35:27.925[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-09-0115:35:28.014[task-1]INFO org.hibernate.annotations.common.Version-HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-09-0115:35:28.141[task-1]INFO org.hibernate.dialect.Dialect-HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-09-0115:35:28.728[task-1]INFO o.h.e.t.jta.platform.internal.JtaPlatformInitiator-HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-09-0115:35:28.736[task-1]INFO o.s.orm.jpa.LocalContainerEntityManagerFactoryBean-Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-0115:35:28.914[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-09-0115:35:29.034[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-09-0115:35:29.034[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-0115:35:29.038[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-09-0115:35:29.038[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-0115:35:30.507[main]WARN o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger-You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-09-0115:35:30.645[main]INFO o.s.c.f.context.catalog.SimpleFunctionRegistry-Looking up function '' with acceptedOutputTypes: []
2020-09-0115:35:31.121[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel nullChannel
2020-09-0115:35:31.143[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel errorChannel
2020-09-0115:35:31.240[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageHandler errorLogger
2020-09-0115:35:31.279[main]INFO o.s.integration.endpoint.EventDrivenConsumer-Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2020-09-0115:35:31.279[main]INFO o.s.integration.channel.PublishSubscribeChannel-Channel 'application-1.errorChannel' has 1 subscriber(s).
2020-09-0115:35:31.280[main]INFO o.s.integration.endpoint.EventDrivenConsumer-started bean '_org.springframework.integration.errorLogger'
2020-09-0115:35:31.292[main]INFO o.s.cloud.netflix.eureka.InstanceInfoFactory-Setting initial instance status as: STARTING
2020-09-0115:35:31.347[main]INFO com.netflix.discovery.DiscoveryClient-Initializing Eureka in region us-east-1
2020-09-0115:35:31.421[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using JSON encoding codec LegacyJacksonJson
2020-09-0115:35:31.421[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using JSON decoding codec LegacyJacksonJson
2020-09-0115:35:31.525[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using XML encoding codec XStreamXml
2020-09-0115:35:31.525[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using XML decoding codec XStreamXml
2020-09-0115:35:31.682[main]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0115:35:31.740[main]INFO com.netflix.discovery.DiscoveryClient-Disable delta property : false
2020-09-0115:35:31.740[main]INFO com.netflix.discovery.DiscoveryClient-Single vip registry refresh property : null
2020-09-0115:35:31.740[main]INFO com.netflix.discovery.DiscoveryClient-Force full registry fetch : false
2020-09-0115:35:31.740[main]INFO com.netflix.discovery.DiscoveryClient-Application is null : false
2020-09-0115:35:31.740[main]INFO com.netflix.discovery.DiscoveryClient-Registered Applications size is zero : true
2020-09-0115:35:31.740[main]INFO com.netflix.discovery.DiscoveryClient-Application version is -1: true
2020-09-0115:35:31.740[main]INFO com.netflix.discovery.DiscoveryClient-Getting all instance registry info from the eureka server
2020-09-0115:35:31.866[main]INFO com.netflix.discovery.DiscoveryClient-The response status is 200
2020-09-0115:35:31.869[main]INFO com.netflix.discovery.DiscoveryClient-Starting heartbeat executor: renew interval is: 30
2020-09-0115:35:31.870[main]INFO com.netflix.discovery.InstanceInfoReplicator-InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-09-0115:35:31.874[main]INFO com.netflix.discovery.DiscoveryClient-Discovery Client initialized at timestamp 1598945731872 with initial instances count: 2
2020-09-0115:35:31.876[main]INFO o.s.c.n.e.serviceregistry.EurekaServiceRegistry-Registering application ORDER with eureka with status UP
2020-09-0115:35:31.876[main]INFO com.netflix.discovery.DiscoveryClient-Saw local status change event StatusChangeEvent [timestamp=1598945731876, current=UP, previous=STARTING]
2020-09-0115:35:31.877[DiscoveryClient-InstanceInfoReplicator-0]INFO com.netflix.discovery.DiscoveryClient-DiscoveryClient_ORDER/DESKTOP-B4REUBC:order:8082: registering service...
2020-09-0115:35:31.878[main]INFO org.apache.coyote.http11.Http11NioProtocol-Starting ProtocolHandler ["http-nio-8082"]
2020-09-0115:35:31.904[main]INFO o.s.boot.web.embedded.tomcat.TomcatWebServer-Tomcat started on port(s): 8082 (http) with context path ''
2020-09-0115:35:31.905[main]INFO o.s.c.n.e.s.EurekaAutoServiceRegistration-Updating port to 8082
2020-09-0115:35:31.906[DiscoveryClient-InstanceInfoReplicator-0]INFO com.netflix.discovery.DiscoveryClient-DiscoveryClient_ORDER/DESKTOP-B4REUBC:order:8082 - registration status: 204
2020-09-0115:35:31.984[main]INFO o.s.a.rabbit.connection.CachingConnectionFactory-Attempting to connect to: [192.168.205.188:5672]
2020-09-0115:35:32.017[main]INFO o.s.a.rabbit.connection.CachingConnectionFactory-Created new connection: rabbitConnectionFactory#623ed5ed:0/SimpleConnection@67263db7 [delegate=amqp://root@192.168.205.188:5672/, localPort= 13079]
2020-09-0115:35:32.023[main]INFO org.springframework.amqp.rabbit.core.RabbitAdmin-Auto-declaring a non-durable, auto-delete, or exclusive Queue (BhqMq) durable:true, auto-delete:true, exclusive:false. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
2020-09-0115:35:32.023[main]INFO org.springframework.amqp.rabbit.core.RabbitAdmin-Auto-declaring a non-durable, auto-delete, or exclusive Queue (GuoMq) durable:true, auto-delete:true, exclusive:false. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
2020-09-0115:35:32.023[main]INFO org.springframework.amqp.rabbit.core.RabbitAdmin-Auto-declaring a non-durable, auto-delete, or exclusive Queue (productinfo) durable:true, auto-delete:true, exclusive:false. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
2020-09-0115:35:32.100[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-09-0115:35:32.100[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-09-0115:35:32.113[main]INFO com.ldh.order.OrderApplication-Started OrderApplication in 9.596 seconds (JVM running for 11.572)
2020-09-0115:40:31.743[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0115:45:31.745[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0115:50:31.746[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0115:55:31.748[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0116:08:38.666[background-preinit]INFO org.hibernate.validator.internal.util.Version-HV000001: Hibernate Validator 6.1.5.Final
2020-09-0116:08:39.323[main]INFO com.ldh.order.OrderApplication-No active profile set, falling back to default profiles: default
2020-09-0116:08:40.023[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-09-0116:08:40.092[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Finished Spring Data repository scanning in 61ms. Found 2 JPA repository interfaces.
2020-09-0116:08:40.381[main]INFO o.springframework.cloud.context.scope.GenericScope-BeanFactory id=4641d5b7-bf15-3e82-acb0-89bd62080065
2020-09-0116:08:40.392[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2020-09-0116:08:40.397[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2020-09-0116:08:40.401[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2020-09-0116:08:40.432[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'com.ldh.product.client.ProductClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0116:08:40.566[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0116:08:40.570[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration' of type [org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0116:08:40.578[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' of type [org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0116:08:40.582[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'mbeanServer' of type [com.sun.jmx.mbeanserver.JmxMBeanServer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0116:08:40.599[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'integrationChannelResolver' of type [org.springframework.integration.support.channel.BeanFactoryChannelResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0116:08:40.601[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0116:08:40.891[main]INFO o.s.boot.web.embedded.tomcat.TomcatWebServer-Tomcat initialized with port(s): 8082 (http)
2020-09-0116:08:40.899[main]INFO org.apache.coyote.http11.Http11NioProtocol-Initializing ProtocolHandler ["http-nio-8082"]
2020-09-0116:08:40.900[main]INFO org.apache.catalina.core.StandardService-Starting service [Tomcat]
2020-09-0116:08:40.900[main]INFO org.apache.catalina.core.StandardEngine-Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-09-0116:08:41.062[main]INFO o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]-Initializing Spring embedded WebApplicationContext
2020-09-0116:08:41.062[main]INFO o.s.b.w.s.c.ServletWebServerApplicationContext-Root WebApplicationContext: initialization completed in 1726 ms
2020-09-0116:08:41.228[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskExecutor-Initializing ExecutorService 'applicationTaskExecutor'
2020-09-0116:08:41.272[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskScheduler-Initializing ExecutorService 'taskScheduler'
2020-09-0116:08:41.284[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Starting...
2020-09-0116:08:41.391[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Start completed.
2020-09-0116:08:41.435[task-1]INFO org.hibernate.jpa.internal.util.LogHelper-HHH000204: Processing PersistenceUnitInfo [name: default]
2020-09-0116:08:41.488[task-1]INFO org.hibernate.Version-HHH000412: Hibernate ORM core version 5.4.20.Final
2020-09-0116:08:41.558[main]WARN o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration-spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-09-0116:08:41.665[task-1]INFO org.hibernate.annotations.common.Version-HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-09-0116:08:41.673[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-09-0116:08:41.818[task-1]INFO org.hibernate.dialect.Dialect-HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-09-0116:08:42.477[task-1]INFO o.h.e.t.jta.platform.internal.JtaPlatformInitiator-HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-09-0116:08:42.489[task-1]INFO o.s.orm.jpa.LocalContainerEntityManagerFactoryBean-Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-0116:08:42.772[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-09-0116:08:43.046[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-09-0116:08:43.047[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-0116:08:43.050[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-09-0116:08:43.050[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-0116:08:43.951[main]WARN o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger-You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-09-0116:08:44.033[main]INFO o.s.c.f.context.catalog.SimpleFunctionRegistry-Looking up function '' with acceptedOutputTypes: []
2020-09-0116:08:44.268[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel errorChannel
2020-09-0116:08:44.326[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel nullChannel
2020-09-0116:08:44.339[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageHandler errorLogger
2020-09-0116:08:44.367[main]INFO o.s.integration.endpoint.EventDrivenConsumer-Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2020-09-0116:08:44.367[main]INFO o.s.integration.channel.PublishSubscribeChannel-Channel 'application-1.errorChannel' has 1 subscriber(s).
2020-09-0116:08:44.368[main]INFO o.s.integration.endpoint.EventDrivenConsumer-started bean '_org.springframework.integration.errorLogger'
2020-09-0116:08:44.375[main]INFO o.s.cloud.netflix.eureka.InstanceInfoFactory-Setting initial instance status as: STARTING
2020-09-0116:08:44.399[main]INFO com.netflix.discovery.DiscoveryClient-Initializing Eureka in region us-east-1
2020-09-0116:08:44.455[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using JSON encoding codec LegacyJacksonJson
2020-09-0116:08:44.483[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using JSON decoding codec LegacyJacksonJson
2020-09-0116:08:44.633[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using XML encoding codec XStreamXml
2020-09-0116:08:44.633[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using XML decoding codec XStreamXml
2020-09-0116:08:44.893[main]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0116:08:44.993[main]INFO com.netflix.discovery.DiscoveryClient-Disable delta property : false
2020-09-0116:08:44.993[main]INFO com.netflix.discovery.DiscoveryClient-Single vip registry refresh property : null
2020-09-0116:08:44.994[main]INFO com.netflix.discovery.DiscoveryClient-Force full registry fetch : false
2020-09-0116:08:44.994[main]INFO com.netflix.discovery.DiscoveryClient-Application is null : false
2020-09-0116:08:44.994[main]INFO com.netflix.discovery.DiscoveryClient-Registered Applications size is zero : true
2020-09-0116:08:44.994[main]INFO com.netflix.discovery.DiscoveryClient-Application version is -1: true
2020-09-0116:08:44.994[main]INFO com.netflix.discovery.DiscoveryClient-Getting all instance registry info from the eureka server
2020-09-0116:08:45.232[main]INFO com.netflix.discovery.DiscoveryClient-The response status is 200
2020-09-0116:08:45.235[main]INFO com.netflix.discovery.DiscoveryClient-Starting heartbeat executor: renew interval is: 30
2020-09-0116:08:45.238[main]INFO com.netflix.discovery.InstanceInfoReplicator-InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-09-0116:08:45.241[main]INFO com.netflix.discovery.DiscoveryClient-Discovery Client initialized at timestamp 1598947725240 with initial instances count: 2
2020-09-0116:08:45.243[main]INFO o.s.c.n.e.serviceregistry.EurekaServiceRegistry-Registering application ORDER with eureka with status UP
2020-09-0116:08:45.243[main]INFO com.netflix.discovery.DiscoveryClient-Saw local status change event StatusChangeEvent [timestamp=1598947725243, current=UP, previous=STARTING]
2020-09-0116:08:45.245[DiscoveryClient-InstanceInfoReplicator-0]INFO com.netflix.discovery.DiscoveryClient-DiscoveryClient_ORDER/DESKTOP-B4REUBC:order:8082: registering service...
2020-09-0116:08:45.245[main]INFO org.apache.coyote.http11.Http11NioProtocol-Starting ProtocolHandler ["http-nio-8082"]
2020-09-0116:08:45.267[main]INFO o.s.boot.web.embedded.tomcat.TomcatWebServer-Tomcat started on port(s): 8082 (http) with context path ''
2020-09-0116:08:45.268[main]INFO o.s.c.n.e.s.EurekaAutoServiceRegistration-Updating port to 8082
2020-09-0116:08:45.270[DiscoveryClient-InstanceInfoReplicator-0]INFO com.netflix.discovery.DiscoveryClient-DiscoveryClient_ORDER/DESKTOP-B4REUBC:order:8082 - registration status: 204
2020-09-0116:08:45.334[main]INFO o.s.a.rabbit.connection.CachingConnectionFactory-Attempting to connect to: [192.168.205.188:5672]
2020-09-0116:08:45.363[main]INFO o.s.a.rabbit.connection.CachingConnectionFactory-Created new connection: rabbitConnectionFactory#49482761:0/SimpleConnection@175c4ae5 [delegate=amqp://root@192.168.205.188:5672/, localPort= 13854]
2020-09-0116:08:45.367[main]INFO org.springframework.amqp.rabbit.core.RabbitAdmin-Auto-declaring a non-durable, auto-delete, or exclusive Queue (GuoMq) durable:true, auto-delete:true, exclusive:false. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
2020-09-0116:08:45.368[main]INFO org.springframework.amqp.rabbit.core.RabbitAdmin-Auto-declaring a non-durable, auto-delete, or exclusive Queue (BhqMq) durable:true, auto-delete:true, exclusive:false. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
2020-09-0116:08:45.368[main]INFO org.springframework.amqp.rabbit.core.RabbitAdmin-Auto-declaring a non-durable, auto-delete, or exclusive Queue (productinfo) durable:true, auto-delete:true, exclusive:false. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
2020-09-0116:08:45.566[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-09-0116:08:45.567[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-09-0116:08:45.684[main]INFO com.ldh.order.OrderApplication-Started OrderApplication in 7.919 seconds (JVM running for 9.458)
2020-09-0116:09:10.804[org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-1]WARN o.s.a.r.listener.ConditionalRejectingErrorHandler-Execution of Rabbit message listener failed.
org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener method 'public void com.ldh.order.message.productInfoReseiver.process(java.lang.Object)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:228)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:148)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:133)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1591)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1510)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1498)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1489)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1433)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:970)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:916)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:83)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1291)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1197)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ClassCastException: org.springframework.amqp.core.Message cannot be cast to java.util.List
	at com.ldh.order.message.productInfoReseiver.process(productInfoReseiver.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:53)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:220)
	... 13 common frames omitted
2020-09-0116:09:10.806[org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-1]WARN o.s.a.r.l.ConditionalRejectingErrorHandler$DefaultExceptionStrategy-Fatal message conversion error; message rejected; it will be dropped or routed to a dead letter exchange, if so configured: (Body:'[{"productId":"164103465734242707","productName":"蜜汁鸡翅","productPrice":1.00,"productStock":950,"productDescription":"好吃","productIcon":"//fuss10.elemecdn.com/7/4a/f307f56216b03f067155aec8b124ejpeg.jpeg","productStatus":0,"categoryType":1}]' MessageProperties [headers={}, contentType=text/plain, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=order, receivedRoutingKey=productinfokey, deliveryTag=1, consumerTag=amq.ctag-PVU5MsVrCnuWbFLi3KwR3A, consumerQueue=productinfo])
2020-09-0116:09:10.807[org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-1]ERRORo.s.a.r.listener.SimpleMessageListenerContainer-Execution of Rabbit message listener failed, and the error handler threw an exception
org.springframework.amqp.AmqpRejectAndDontRequeueException: Error Handler converted exception to fatal
	at org.springframework.amqp.rabbit.listener.ConditionalRejectingErrorHandler.handleError(ConditionalRejectingErrorHandler.java:116)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:1395)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.handleListenerException(AbstractMessageListenerContainer.java:1679)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1454)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:970)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:916)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:83)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1291)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1197)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener method 'public void com.ldh.order.message.productInfoReseiver.process(java.lang.Object)' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:228)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:148)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:133)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1591)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1510)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1498)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1489)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1433)
	... 6 common frames omitted
Caused by: java.lang.ClassCastException: org.springframework.amqp.core.Message cannot be cast to java.util.List
	at com.ldh.order.message.productInfoReseiver.process(productInfoReseiver.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:53)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:220)
	... 13 common frames omitted
2020-09-0116:19:33.466[background-preinit]INFO org.hibernate.validator.internal.util.Version-HV000001: Hibernate Validator 6.1.5.Final
2020-09-0116:19:34.023[main]INFO com.ldh.order.OrderApplication-No active profile set, falling back to default profiles: default
2020-09-0116:19:34.530[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-09-0116:19:34.609[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Finished Spring Data repository scanning in 71ms. Found 2 JPA repository interfaces.
2020-09-0116:19:34.907[main]INFO o.springframework.cloud.context.scope.GenericScope-BeanFactory id=4641d5b7-bf15-3e82-acb0-89bd62080065
2020-09-0116:19:34.916[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2020-09-0116:19:34.921[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2020-09-0116:19:34.924[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2020-09-0116:19:34.944[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'com.ldh.product.client.ProductClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0116:19:35.047[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0116:19:35.050[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration' of type [org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0116:19:35.059[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' of type [org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0116:19:35.062[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'mbeanServer' of type [com.sun.jmx.mbeanserver.JmxMBeanServer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0116:19:35.077[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'integrationChannelResolver' of type [org.springframework.integration.support.channel.BeanFactoryChannelResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0116:19:35.078[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0116:19:35.409[main]INFO o.s.boot.web.embedded.tomcat.TomcatWebServer-Tomcat initialized with port(s): 8082 (http)
2020-09-0116:19:35.419[main]INFO org.apache.coyote.http11.Http11NioProtocol-Initializing ProtocolHandler ["http-nio-8082"]
2020-09-0116:19:35.420[main]INFO org.apache.catalina.core.StandardService-Starting service [Tomcat]
2020-09-0116:19:35.420[main]INFO org.apache.catalina.core.StandardEngine-Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-09-0116:19:35.554[main]INFO o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]-Initializing Spring embedded WebApplicationContext
2020-09-0116:19:35.555[main]INFO o.s.b.w.s.c.ServletWebServerApplicationContext-Root WebApplicationContext: initialization completed in 1519 ms
2020-09-0116:19:35.693[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskExecutor-Initializing ExecutorService 'applicationTaskExecutor'
2020-09-0116:19:35.733[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskScheduler-Initializing ExecutorService 'taskScheduler'
2020-09-0116:19:35.741[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Starting...
2020-09-0116:19:35.840[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Start completed.
2020-09-0116:19:35.881[task-1]INFO org.hibernate.jpa.internal.util.LogHelper-HHH000204: Processing PersistenceUnitInfo [name: default]
2020-09-0116:19:35.938[task-1]INFO org.hibernate.Version-HHH000412: Hibernate ORM core version 5.4.20.Final
2020-09-0116:19:35.985[main]WARN o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration-spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-09-0116:19:36.093[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-09-0116:19:36.097[task-1]INFO org.hibernate.annotations.common.Version-HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-09-0116:19:36.213[task-1]INFO org.hibernate.dialect.Dialect-HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-09-0116:19:36.726[task-1]INFO o.h.e.t.jta.platform.internal.JtaPlatformInitiator-HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-09-0116:19:36.733[task-1]INFO o.s.orm.jpa.LocalContainerEntityManagerFactoryBean-Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-0116:19:36.906[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-09-0116:19:37.035[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-09-0116:19:37.036[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-0116:19:37.039[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-09-0116:19:37.039[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-0116:19:37.916[main]WARN o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger-You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-09-0116:19:37.994[main]INFO o.s.c.f.context.catalog.SimpleFunctionRegistry-Looking up function '' with acceptedOutputTypes: []
2020-09-0116:19:38.215[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel errorChannel
2020-09-0116:19:38.277[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel nullChannel
2020-09-0116:19:38.291[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageHandler errorLogger
2020-09-0116:19:38.319[main]INFO o.s.integration.endpoint.EventDrivenConsumer-Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2020-09-0116:19:38.319[main]INFO o.s.integration.channel.PublishSubscribeChannel-Channel 'application-1.errorChannel' has 1 subscriber(s).
2020-09-0116:19:38.320[main]INFO o.s.integration.endpoint.EventDrivenConsumer-started bean '_org.springframework.integration.errorLogger'
2020-09-0116:19:38.327[main]INFO o.s.cloud.netflix.eureka.InstanceInfoFactory-Setting initial instance status as: STARTING
2020-09-0116:19:38.350[main]INFO com.netflix.discovery.DiscoveryClient-Initializing Eureka in region us-east-1
2020-09-0116:19:38.400[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using JSON encoding codec LegacyJacksonJson
2020-09-0116:19:38.400[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using JSON decoding codec LegacyJacksonJson
2020-09-0116:19:38.489[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using XML encoding codec XStreamXml
2020-09-0116:19:38.489[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using XML decoding codec XStreamXml
2020-09-0116:19:38.615[main]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0116:19:38.656[main]INFO com.netflix.discovery.DiscoveryClient-Disable delta property : false
2020-09-0116:19:38.656[main]INFO com.netflix.discovery.DiscoveryClient-Single vip registry refresh property : null
2020-09-0116:19:38.656[main]INFO com.netflix.discovery.DiscoveryClient-Force full registry fetch : false
2020-09-0116:19:38.656[main]INFO com.netflix.discovery.DiscoveryClient-Application is null : false
2020-09-0116:19:38.656[main]INFO com.netflix.discovery.DiscoveryClient-Registered Applications size is zero : true
2020-09-0116:19:38.657[main]INFO com.netflix.discovery.DiscoveryClient-Application version is -1: true
2020-09-0116:19:38.657[main]INFO com.netflix.discovery.DiscoveryClient-Getting all instance registry info from the eureka server
2020-09-0116:19:38.774[main]INFO com.netflix.discovery.DiscoveryClient-The response status is 200
2020-09-0116:19:38.777[main]INFO com.netflix.discovery.DiscoveryClient-Starting heartbeat executor: renew interval is: 30
2020-09-0116:19:38.779[main]INFO com.netflix.discovery.InstanceInfoReplicator-InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-09-0116:19:38.782[main]INFO com.netflix.discovery.DiscoveryClient-Discovery Client initialized at timestamp 1598948378781 with initial instances count: 2
2020-09-0116:19:38.784[main]INFO o.s.c.n.e.serviceregistry.EurekaServiceRegistry-Registering application ORDER with eureka with status UP
2020-09-0116:19:38.784[main]INFO com.netflix.discovery.DiscoveryClient-Saw local status change event StatusChangeEvent [timestamp=1598948378784, current=UP, previous=STARTING]
2020-09-0116:19:38.785[DiscoveryClient-InstanceInfoReplicator-0]INFO com.netflix.discovery.DiscoveryClient-DiscoveryClient_ORDER/DESKTOP-B4REUBC:order:8082: registering service...
2020-09-0116:19:38.786[main]INFO org.apache.coyote.http11.Http11NioProtocol-Starting ProtocolHandler ["http-nio-8082"]
2020-09-0116:19:38.812[main]INFO o.s.boot.web.embedded.tomcat.TomcatWebServer-Tomcat started on port(s): 8082 (http) with context path ''
2020-09-0116:19:38.813[main]INFO o.s.c.n.e.s.EurekaAutoServiceRegistration-Updating port to 8082
2020-09-0116:19:38.819[DiscoveryClient-InstanceInfoReplicator-0]INFO com.netflix.discovery.DiscoveryClient-DiscoveryClient_ORDER/DESKTOP-B4REUBC:order:8082 - registration status: 204
2020-09-0116:19:38.877[main]INFO o.s.a.rabbit.connection.CachingConnectionFactory-Attempting to connect to: [192.168.205.188:5672]
2020-09-0116:19:38.905[main]INFO o.s.a.rabbit.connection.CachingConnectionFactory-Created new connection: rabbitConnectionFactory#49482761:0/SimpleConnection@175c4ae5 [delegate=amqp://root@192.168.205.188:5672/, localPort= 14234]
2020-09-0116:19:38.909[main]INFO org.springframework.amqp.rabbit.core.RabbitAdmin-Auto-declaring a non-durable, auto-delete, or exclusive Queue (GuoMq) durable:true, auto-delete:true, exclusive:false. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
2020-09-0116:19:38.909[main]INFO org.springframework.amqp.rabbit.core.RabbitAdmin-Auto-declaring a non-durable, auto-delete, or exclusive Queue (BhqMq) durable:true, auto-delete:true, exclusive:false. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
2020-09-0116:19:38.909[main]INFO org.springframework.amqp.rabbit.core.RabbitAdmin-Auto-declaring a non-durable, auto-delete, or exclusive Queue (productinfo) durable:true, auto-delete:true, exclusive:false. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
2020-09-0116:19:38.989[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-09-0116:19:38.989[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-09-0116:19:38.999[main]INFO com.ldh.order.OrderApplication-Started OrderApplication in 6.338 seconds (JVM running for 7.236)
2020-09-0116:24:38.659[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0116:41:04.749[background-preinit]INFO org.hibernate.validator.internal.util.Version-HV000001: Hibernate Validator 6.1.5.Final
2020-09-0116:41:05.189[main]INFO com.ldh.order.OrderApplication-No active profile set, falling back to default profiles: default
2020-09-0116:41:05.717[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-0116:41:05.717[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-09-0116:41:05.784[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Finished Spring Data repository scanning in 61ms. Found 2 JPA repository interfaces.
2020-09-0116:41:05.798[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-0116:41:05.800[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-0116:41:05.816[main]INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport-Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ldh.order.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-09-0116:41:05.816[main]INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport-Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ldh.order.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-09-0116:41:05.816[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces.
2020-09-0116:41:06.097[main]INFO o.springframework.cloud.context.scope.GenericScope-BeanFactory id=71bce341-72f3-34f7-afa9-bd76c2b49439
2020-09-0116:41:06.107[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2020-09-0116:41:06.112[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2020-09-0116:41:06.124[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2020-09-0116:41:06.149[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'com.ldh.product.client.ProductClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0116:41:06.246[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0116:41:06.250[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration' of type [org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0116:41:06.258[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' of type [org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0116:41:06.262[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'mbeanServer' of type [com.sun.jmx.mbeanserver.JmxMBeanServer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0116:41:06.275[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'integrationChannelResolver' of type [org.springframework.integration.support.channel.BeanFactoryChannelResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0116:41:06.276[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0116:41:06.560[main]INFO o.s.boot.web.embedded.tomcat.TomcatWebServer-Tomcat initialized with port(s): 8082 (http)
2020-09-0116:41:06.568[main]INFO org.apache.coyote.http11.Http11NioProtocol-Initializing ProtocolHandler ["http-nio-8082"]
2020-09-0116:41:06.569[main]INFO org.apache.catalina.core.StandardService-Starting service [Tomcat]
2020-09-0116:41:06.569[main]INFO org.apache.catalina.core.StandardEngine-Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-09-0116:41:06.714[main]INFO o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]-Initializing Spring embedded WebApplicationContext
2020-09-0116:41:06.715[main]INFO o.s.b.w.s.c.ServletWebServerApplicationContext-Root WebApplicationContext: initialization completed in 1514 ms
2020-09-0116:41:06.857[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskExecutor-Initializing ExecutorService 'applicationTaskExecutor'
2020-09-0116:41:06.899[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskScheduler-Initializing ExecutorService 'taskScheduler'
2020-09-0116:41:06.907[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Starting...
2020-09-0116:41:07.012[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Start completed.
2020-09-0116:41:07.048[task-1]INFO org.hibernate.jpa.internal.util.LogHelper-HHH000204: Processing PersistenceUnitInfo [name: default]
2020-09-0116:41:07.097[task-1]INFO org.hibernate.Version-HHH000412: Hibernate ORM core version 5.4.20.Final
2020-09-0116:41:07.140[main]WARN o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration-spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-09-0116:41:07.239[task-1]INFO org.hibernate.annotations.common.Version-HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-09-0116:41:07.245[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-09-0116:41:07.350[task-1]INFO org.hibernate.dialect.Dialect-HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-09-0116:41:07.929[task-1]INFO o.h.e.t.jta.platform.internal.JtaPlatformInitiator-HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-09-0116:41:07.937[task-1]INFO o.s.orm.jpa.LocalContainerEntityManagerFactoryBean-Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-0116:41:08.088[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-09-0116:41:08.342[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskExecutor-Initializing ExecutorService
2020-09-0116:41:08.513[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-09-0116:41:08.513[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-0116:41:08.516[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-09-0116:41:08.516[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-0116:41:09.298[main]WARN o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger-You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-09-0116:41:09.372[main]INFO o.s.c.f.context.catalog.SimpleFunctionRegistry-Looking up function '' with acceptedOutputTypes: []
2020-09-0116:41:09.566[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel errorChannel
2020-09-0116:41:09.623[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel nullChannel
2020-09-0116:41:09.639[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageHandler errorLogger
2020-09-0116:41:09.671[main]INFO o.s.integration.endpoint.EventDrivenConsumer-Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2020-09-0116:41:09.671[main]INFO o.s.integration.channel.PublishSubscribeChannel-Channel 'application-1.errorChannel' has 1 subscriber(s).
2020-09-0116:41:09.671[main]INFO o.s.integration.endpoint.EventDrivenConsumer-started bean '_org.springframework.integration.errorLogger'
2020-09-0116:41:09.680[main]INFO o.s.cloud.netflix.eureka.InstanceInfoFactory-Setting initial instance status as: STARTING
2020-09-0116:41:09.705[main]INFO com.netflix.discovery.DiscoveryClient-Initializing Eureka in region us-east-1
2020-09-0116:41:09.758[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using JSON encoding codec LegacyJacksonJson
2020-09-0116:41:09.758[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using JSON decoding codec LegacyJacksonJson
2020-09-0116:41:09.862[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using XML encoding codec XStreamXml
2020-09-0116:41:09.862[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using XML decoding codec XStreamXml
2020-09-0116:41:10.008[main]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0116:41:10.048[main]INFO com.netflix.discovery.DiscoveryClient-Disable delta property : false
2020-09-0116:41:10.048[main]INFO com.netflix.discovery.DiscoveryClient-Single vip registry refresh property : null
2020-09-0116:41:10.048[main]INFO com.netflix.discovery.DiscoveryClient-Force full registry fetch : false
2020-09-0116:41:10.048[main]INFO com.netflix.discovery.DiscoveryClient-Application is null : false
2020-09-0116:41:10.048[main]INFO com.netflix.discovery.DiscoveryClient-Registered Applications size is zero : true
2020-09-0116:41:10.049[main]INFO com.netflix.discovery.DiscoveryClient-Application version is -1: true
2020-09-0116:41:10.049[main]INFO com.netflix.discovery.DiscoveryClient-Getting all instance registry info from the eureka server
2020-09-0116:41:10.179[main]INFO com.netflix.discovery.DiscoveryClient-The response status is 200
2020-09-0116:41:10.181[main]INFO com.netflix.discovery.DiscoveryClient-Starting heartbeat executor: renew interval is: 30
2020-09-0116:41:10.183[main]INFO com.netflix.discovery.InstanceInfoReplicator-InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-09-0116:41:10.186[main]INFO com.netflix.discovery.DiscoveryClient-Discovery Client initialized at timestamp 1598949670185 with initial instances count: 2
2020-09-0116:41:10.188[main]INFO o.s.c.n.e.serviceregistry.EurekaServiceRegistry-Registering application ORDER with eureka with status UP
2020-09-0116:41:10.189[main]INFO com.netflix.discovery.DiscoveryClient-Saw local status change event StatusChangeEvent [timestamp=1598949670189, current=UP, previous=STARTING]
2020-09-0116:41:10.190[DiscoveryClient-InstanceInfoReplicator-0]INFO com.netflix.discovery.DiscoveryClient-DiscoveryClient_ORDER/DESKTOP-B4REUBC:order:8082: registering service...
2020-09-0116:41:10.190[main]INFO org.apache.coyote.http11.Http11NioProtocol-Starting ProtocolHandler ["http-nio-8082"]
2020-09-0116:41:10.215[main]INFO o.s.boot.web.embedded.tomcat.TomcatWebServer-Tomcat started on port(s): 8082 (http) with context path ''
2020-09-0116:41:10.216[main]INFO o.s.c.n.e.s.EurekaAutoServiceRegistration-Updating port to 8082
2020-09-0116:41:10.220[DiscoveryClient-InstanceInfoReplicator-0]INFO com.netflix.discovery.DiscoveryClient-DiscoveryClient_ORDER/DESKTOP-B4REUBC:order:8082 - registration status: 204
2020-09-0116:41:10.281[main]INFO o.s.a.rabbit.connection.CachingConnectionFactory-Attempting to connect to: [192.168.205.188:5672]
2020-09-0116:41:10.313[main]INFO o.s.a.rabbit.connection.CachingConnectionFactory-Created new connection: rabbitConnectionFactory#174aabb2:0/SimpleConnection@33e6176b [delegate=amqp://root@192.168.205.188:5672/, localPort= 14961]
2020-09-0116:41:10.317[main]INFO org.springframework.amqp.rabbit.core.RabbitAdmin-Auto-declaring a non-durable, auto-delete, or exclusive Queue (GuoMq) durable:true, auto-delete:true, exclusive:false. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
2020-09-0116:41:10.318[main]INFO org.springframework.amqp.rabbit.core.RabbitAdmin-Auto-declaring a non-durable, auto-delete, or exclusive Queue (BhqMq) durable:true, auto-delete:true, exclusive:false. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
2020-09-0116:41:10.318[main]INFO org.springframework.amqp.rabbit.core.RabbitAdmin-Auto-declaring a non-durable, auto-delete, or exclusive Queue (productinfo) durable:true, auto-delete:true, exclusive:false. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
2020-09-0116:41:10.398[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-09-0116:41:10.399[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-09-0116:41:10.408[main]INFO com.ldh.order.OrderApplication-Started OrderApplication in 6.187 seconds (JVM running for 7.032)
2020-09-0116:46:10.051[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0116:51:10.052[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0116:56:10.053[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0117:01:10.054[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0117:06:10.056[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0117:11:10.057[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0117:16:10.058[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0117:21:03.362[background-preinit]INFO org.hibernate.validator.internal.util.Version-HV000001: Hibernate Validator 6.1.5.Final
2020-09-0117:21:03.812[main]INFO com.ldh.order.OrderApplication-No active profile set, falling back to default profiles: default
2020-09-0117:21:04.351[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-0117:21:04.351[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-09-0117:21:04.421[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Finished Spring Data repository scanning in 64ms. Found 2 JPA repository interfaces.
2020-09-0117:21:04.436[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-0117:21:04.437[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-0117:21:04.455[main]INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport-Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ldh.order.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-09-0117:21:04.455[main]INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport-Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ldh.order.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-09-0117:21:04.455[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces.
2020-09-0117:21:04.729[main]INFO o.springframework.cloud.context.scope.GenericScope-BeanFactory id=71bce341-72f3-34f7-afa9-bd76c2b49439
2020-09-0117:21:04.739[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2020-09-0117:21:04.745[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2020-09-0117:21:04.749[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2020-09-0117:21:04.765[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'com.ldh.product.client.ProductClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0117:21:04.868[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0117:21:04.871[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration' of type [org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0117:21:04.879[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' of type [org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0117:21:04.882[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'mbeanServer' of type [com.sun.jmx.mbeanserver.JmxMBeanServer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0117:21:04.895[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'integrationChannelResolver' of type [org.springframework.integration.support.channel.BeanFactoryChannelResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0117:21:04.896[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0117:21:05.174[main]INFO o.s.boot.web.embedded.tomcat.TomcatWebServer-Tomcat initialized with port(s): 8082 (http)
2020-09-0117:21:05.181[main]INFO org.apache.coyote.http11.Http11NioProtocol-Initializing ProtocolHandler ["http-nio-8082"]
2020-09-0117:21:05.182[main]INFO org.apache.catalina.core.StandardService-Starting service [Tomcat]
2020-09-0117:21:05.182[main]INFO org.apache.catalina.core.StandardEngine-Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-09-0117:21:05.320[main]INFO o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]-Initializing Spring embedded WebApplicationContext
2020-09-0117:21:05.320[main]INFO o.s.b.w.s.c.ServletWebServerApplicationContext-Root WebApplicationContext: initialization completed in 1495 ms
2020-09-0117:21:05.455[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskExecutor-Initializing ExecutorService 'applicationTaskExecutor'
2020-09-0117:21:05.509[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskScheduler-Initializing ExecutorService 'taskScheduler'
2020-09-0117:21:05.518[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Starting...
2020-09-0117:21:05.629[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Start completed.
2020-09-0117:21:05.683[task-1]INFO org.hibernate.jpa.internal.util.LogHelper-HHH000204: Processing PersistenceUnitInfo [name: default]
2020-09-0117:21:05.738[task-1]INFO org.hibernate.Version-HHH000412: Hibernate ORM core version 5.4.20.Final
2020-09-0117:21:05.768[main]WARN o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration-spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-09-0117:21:05.866[task-1]INFO org.hibernate.annotations.common.Version-HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-09-0117:21:05.868[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-09-0117:21:05.973[task-1]INFO org.hibernate.dialect.Dialect-HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-09-0117:21:06.518[task-1]INFO o.h.e.t.jta.platform.internal.JtaPlatformInitiator-HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-09-0117:21:06.526[task-1]INFO o.s.orm.jpa.LocalContainerEntityManagerFactoryBean-Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-0117:21:06.679[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-09-0117:21:06.920[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskExecutor-Initializing ExecutorService
2020-09-0117:21:07.088[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-09-0117:21:07.089[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-0117:21:07.092[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-09-0117:21:07.092[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-0117:21:07.905[main]WARN o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger-You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-09-0117:21:07.991[main]INFO o.s.c.f.context.catalog.SimpleFunctionRegistry-Looking up function '' with acceptedOutputTypes: []
2020-09-0117:21:08.186[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel errorChannel
2020-09-0117:21:08.244[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel nullChannel
2020-09-0117:21:08.258[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageHandler errorLogger
2020-09-0117:21:08.287[main]INFO o.s.integration.endpoint.EventDrivenConsumer-Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2020-09-0117:21:08.287[main]INFO o.s.integration.channel.PublishSubscribeChannel-Channel 'application-1.errorChannel' has 1 subscriber(s).
2020-09-0117:21:08.287[main]INFO o.s.integration.endpoint.EventDrivenConsumer-started bean '_org.springframework.integration.errorLogger'
2020-09-0117:21:08.295[main]INFO o.s.cloud.netflix.eureka.InstanceInfoFactory-Setting initial instance status as: STARTING
2020-09-0117:21:08.321[main]INFO com.netflix.discovery.DiscoveryClient-Initializing Eureka in region us-east-1
2020-09-0117:21:08.374[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using JSON encoding codec LegacyJacksonJson
2020-09-0117:21:08.375[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using JSON decoding codec LegacyJacksonJson
2020-09-0117:21:08.468[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using XML encoding codec XStreamXml
2020-09-0117:21:08.469[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using XML decoding codec XStreamXml
2020-09-0117:21:08.599[main]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0117:21:08.638[main]INFO com.netflix.discovery.DiscoveryClient-Disable delta property : false
2020-09-0117:21:08.639[main]INFO com.netflix.discovery.DiscoveryClient-Single vip registry refresh property : null
2020-09-0117:21:08.639[main]INFO com.netflix.discovery.DiscoveryClient-Force full registry fetch : false
2020-09-0117:21:08.639[main]INFO com.netflix.discovery.DiscoveryClient-Application is null : false
2020-09-0117:21:08.639[main]INFO com.netflix.discovery.DiscoveryClient-Registered Applications size is zero : true
2020-09-0117:21:08.639[main]INFO com.netflix.discovery.DiscoveryClient-Application version is -1: true
2020-09-0117:21:08.639[main]INFO com.netflix.discovery.DiscoveryClient-Getting all instance registry info from the eureka server
2020-09-0117:21:08.780[main]INFO com.netflix.discovery.DiscoveryClient-The response status is 200
2020-09-0117:21:08.782[main]INFO com.netflix.discovery.DiscoveryClient-Starting heartbeat executor: renew interval is: 30
2020-09-0117:21:08.784[main]INFO com.netflix.discovery.InstanceInfoReplicator-InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-09-0117:21:08.787[main]INFO com.netflix.discovery.DiscoveryClient-Discovery Client initialized at timestamp 1598952068786 with initial instances count: 2
2020-09-0117:21:08.789[main]INFO o.s.c.n.e.serviceregistry.EurekaServiceRegistry-Registering application ORDER with eureka with status UP
2020-09-0117:21:08.790[main]INFO com.netflix.discovery.DiscoveryClient-Saw local status change event StatusChangeEvent [timestamp=1598952068790, current=UP, previous=STARTING]
2020-09-0117:21:08.791[DiscoveryClient-InstanceInfoReplicator-0]INFO com.netflix.discovery.DiscoveryClient-DiscoveryClient_ORDER/DESKTOP-B4REUBC:order:8082: registering service...
2020-09-0117:21:08.792[main]INFO org.apache.coyote.http11.Http11NioProtocol-Starting ProtocolHandler ["http-nio-8082"]
2020-09-0117:21:08.816[main]INFO o.s.boot.web.embedded.tomcat.TomcatWebServer-Tomcat started on port(s): 8082 (http) with context path ''
2020-09-0117:21:08.817[main]INFO o.s.c.n.e.s.EurekaAutoServiceRegistration-Updating port to 8082
2020-09-0117:21:08.821[DiscoveryClient-InstanceInfoReplicator-0]INFO com.netflix.discovery.DiscoveryClient-DiscoveryClient_ORDER/DESKTOP-B4REUBC:order:8082 - registration status: 204
2020-09-0117:21:08.881[main]INFO o.s.a.rabbit.connection.CachingConnectionFactory-Attempting to connect to: [192.168.205.188:5672]
2020-09-0117:21:08.908[main]INFO o.s.a.rabbit.connection.CachingConnectionFactory-Created new connection: rabbitConnectionFactory#7a05cdc8:0/SimpleConnection@569d7074 [delegate=amqp://root@192.168.205.188:5672/, localPort= 15824]
2020-09-0117:21:08.912[main]INFO org.springframework.amqp.rabbit.core.RabbitAdmin-Auto-declaring a non-durable, auto-delete, or exclusive Queue (GuoMq) durable:true, auto-delete:true, exclusive:false. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
2020-09-0117:21:08.913[main]INFO org.springframework.amqp.rabbit.core.RabbitAdmin-Auto-declaring a non-durable, auto-delete, or exclusive Queue (BhqMq) durable:true, auto-delete:true, exclusive:false. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
2020-09-0117:21:08.913[main]INFO org.springframework.amqp.rabbit.core.RabbitAdmin-Auto-declaring a non-durable, auto-delete, or exclusive Queue (productinfo) durable:true, auto-delete:true, exclusive:false. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
2020-09-0117:21:08.985[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-09-0117:21:08.986[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-09-0117:21:08.995[main]INFO com.ldh.order.OrderApplication-Started OrderApplication in 6.153 seconds (JVM running for 7.171)
2020-09-0117:26:08.655[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0117:27:08.668[http-nio-8082-exec-2]INFO o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]-Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-0117:27:08.669[http-nio-8082-exec-2]INFO org.springframework.web.servlet.DispatcherServlet-Initializing Servlet 'dispatcherServlet'
2020-09-0117:27:08.675[http-nio-8082-exec-2]INFO org.springframework.web.servlet.DispatcherServlet-Completed initialization in 6 ms
2020-09-0117:27:08.928[http-nio-8082-exec-2]INFO com.netflix.config.ChainedDynamicProperty-Flipping property: product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-0117:27:08.953[http-nio-8082-exec-2]INFO com.netflix.util.concurrent.ShutdownEnabledTimer-Shutdown hook installed for: NFLoadBalancer-PingTimer-product
2020-09-0117:27:08.953[http-nio-8082-exec-2]INFO com.netflix.loadbalancer.BaseLoadBalancer-Client: product instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=product,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-09-0117:27:08.958[http-nio-8082-exec-2]INFO c.n.loadbalancer.DynamicServerListLoadBalancer-Using serverListUpdater PollingServerListUpdater
2020-09-0117:27:08.981[http-nio-8082-exec-2]INFO com.netflix.config.ChainedDynamicProperty-Flipping property: product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-0117:27:08.983[http-nio-8082-exec-2]INFO c.n.loadbalancer.DynamicServerListLoadBalancer-DynamicServerListLoadBalancer for client product initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=product,current list of Servers=[DESKTOP-B4REUBC:8081],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-B4REUBC:8081;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6d884ce3
2020-09-0117:27:08.997[http-nio-8082-exec-2]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-09-0117:27:08.997[http-nio-8082-exec-2]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-09-0117:27:09.387[http-nio-8082-exec-2]DEBUGorg.hibernate.SQL-select orderdetai0_.detail_id as detail_i1_0_0_, orderdetai0_.create_time as create_t2_0_0_, orderdetai0_.order_id as order_id3_0_0_, orderdetai0_.product_icon as product_4_0_0_, orderdetai0_.product_id as product_5_0_0_, orderdetai0_.product_name as product_6_0_0_, orderdetai0_.product_price as product_7_0_0_, orderdetai0_.product_quantity as product_8_0_0_, orderdetai0_.update_time as update_t9_0_0_ from order_detail orderdetai0_ where orderdetai0_.detail_id=?
2020-09-0117:27:09.404[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [1] as [VARCHAR] - [1598952429363739856]
2020-09-0117:27:09.423[http-nio-8082-exec-2]DEBUGorg.hibernate.SQL-select orderdetai0_.detail_id as detail_i1_0_0_, orderdetai0_.create_time as create_t2_0_0_, orderdetai0_.order_id as order_id3_0_0_, orderdetai0_.product_icon as product_4_0_0_, orderdetai0_.product_id as product_5_0_0_, orderdetai0_.product_name as product_6_0_0_, orderdetai0_.product_price as product_7_0_0_, orderdetai0_.product_quantity as product_8_0_0_, orderdetai0_.update_time as update_t9_0_0_ from order_detail orderdetai0_ where orderdetai0_.detail_id=?
2020-09-0117:27:09.423[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [1] as [VARCHAR] - [1598952429422846879]
2020-09-0117:27:09.577[http-nio-8082-exec-2]DEBUGorg.hibernate.SQL-select ordermaste0_.order_id as order_id1_1_0_, ordermaste0_.buyer_address as buyer_ad2_1_0_, ordermaste0_.buyer_name as buyer_na3_1_0_, ordermaste0_.buyer_openid as buyer_op4_1_0_, ordermaste0_.buyer_phone as buyer_ph5_1_0_, ordermaste0_.create_time as create_t6_1_0_, ordermaste0_.order_amount as order_am7_1_0_, ordermaste0_.order_status as order_st8_1_0_, ordermaste0_.pay_status as pay_stat9_1_0_, ordermaste0_.update_time as update_10_1_0_ from order_master ordermaste0_ where ordermaste0_.order_id=?
2020-09-0117:27:09.577[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [1] as [VARCHAR] - [1598952428782185777]
2020-09-0117:27:09.596[http-nio-8082-exec-2]DEBUGorg.hibernate.SQL-insert into order_detail (create_time, order_id, product_icon, product_id, product_name, product_price, product_quantity, update_time, detail_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-0117:27:09.597[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [1] as [TIMESTAMP] - [null]
2020-09-0117:27:09.598[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [2] as [VARCHAR] - [1598952428782185777]
2020-09-0117:27:09.598[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [3] as [VARCHAR] - [//fuss10.elemecdn.com/7/4a/f307f56216b03f067155aec8b124ejpeg.jpeg]
2020-09-0117:27:09.598[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [4] as [VARCHAR] - [164103465734242707]
2020-09-0117:27:09.599[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [5] as [VARCHAR] - [蜜汁鸡翅]
2020-09-0117:27:09.600[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [6] as [NUMERIC] - [1.00]
2020-09-0117:27:09.600[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [7] as [INTEGER] - [2]
2020-09-0117:27:09.601[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [8] as [TIMESTAMP] - [null]
2020-09-0117:27:09.601[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [9] as [VARCHAR] - [1598952429363739856]
2020-09-0117:27:09.603[http-nio-8082-exec-2]DEBUGorg.hibernate.SQL-insert into order_detail (create_time, order_id, product_icon, product_id, product_name, product_price, product_quantity, update_time, detail_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-0117:27:09.604[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [1] as [TIMESTAMP] - [null]
2020-09-0117:27:09.604[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [2] as [VARCHAR] - [1598952428782185777]
2020-09-0117:27:09.604[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [3] as [VARCHAR] - [//fuss10.elemecdn.com/9/93/91994e8456818dfe7b0bd95f10a50jpeg.jpeg]
2020-09-0117:27:09.604[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [4] as [VARCHAR] - [157875227953464068]
2020-09-0117:27:09.604[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [5] as [VARCHAR] - [慕斯蛋糕]
2020-09-0117:27:09.604[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [6] as [NUMERIC] - [10.90]
2020-09-0117:27:09.604[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [7] as [INTEGER] - [2]
2020-09-0117:27:09.604[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [8] as [TIMESTAMP] - [null]
2020-09-0117:27:09.604[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [9] as [VARCHAR] - [1598952429422846879]
2020-09-0117:27:09.605[http-nio-8082-exec-2]DEBUGorg.hibernate.SQL-insert into order_master (buyer_address, buyer_name, buyer_openid, buyer_phone, create_time, order_amount, order_status, pay_status, update_time, order_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-0117:27:09.605[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [1] as [VARCHAR] - [哈尔滨大庆]
2020-09-0117:27:09.606[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [2] as [VARCHAR] - [果果0901]
2020-09-0117:27:09.606[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [3] as [VARCHAR] - []
2020-09-0117:27:09.606[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [4] as [VARCHAR] - [13500006666]
2020-09-0117:27:09.606[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [5] as [TIMESTAMP] - [null]
2020-09-0117:27:09.606[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [6] as [NUMERIC] - [23.80]
2020-09-0117:27:09.606[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [7] as [INTEGER] - [0]
2020-09-0117:27:09.606[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [8] as [INTEGER] - [0]
2020-09-0117:27:09.606[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [9] as [TIMESTAMP] - [null]
2020-09-0117:27:09.606[http-nio-8082-exec-2]TRACEorg.hibernate.type.descriptor.sql.BasicBinder-binding parameter [10] as [VARCHAR] - [1598952428782185777]
2020-09-0117:27:09.962[PollingServerListUpdater-0]INFO com.netflix.config.ChainedDynamicProperty-Flipping property: product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-0118:07:55.837[background-preinit]INFO org.hibernate.validator.internal.util.Version-HV000001: Hibernate Validator 6.1.5.Final
2020-09-0118:07:56.305[main]INFO com.ldh.order.OrderApplication-No active profile set, falling back to default profiles: default
2020-09-0118:07:56.880[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-0118:07:56.881[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-09-0118:07:56.954[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Finished Spring Data repository scanning in 66ms. Found 2 JPA repository interfaces.
2020-09-0118:07:56.968[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-0118:07:56.969[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-0118:07:56.985[main]INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport-Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ldh.order.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-09-0118:07:56.986[main]INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport-Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ldh.order.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-09-0118:07:56.986[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces.
2020-09-0118:07:57.279[main]INFO o.springframework.cloud.context.scope.GenericScope-BeanFactory id=71bce341-72f3-34f7-afa9-bd76c2b49439
2020-09-0118:07:57.290[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2020-09-0118:07:57.295[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2020-09-0118:07:57.299[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2020-09-0118:07:57.315[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'com.ldh.product.client.ProductClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0118:07:57.421[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0118:07:57.426[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration' of type [org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0118:07:57.434[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' of type [org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0118:07:57.438[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'mbeanServer' of type [com.sun.jmx.mbeanserver.JmxMBeanServer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0118:07:57.453[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'integrationChannelResolver' of type [org.springframework.integration.support.channel.BeanFactoryChannelResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0118:07:57.455[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0118:07:57.756[main]INFO o.s.boot.web.embedded.tomcat.TomcatWebServer-Tomcat initialized with port(s): 8082 (http)
2020-09-0118:07:57.763[main]INFO org.apache.coyote.http11.Http11NioProtocol-Initializing ProtocolHandler ["http-nio-8082"]
2020-09-0118:07:57.764[main]INFO org.apache.catalina.core.StandardService-Starting service [Tomcat]
2020-09-0118:07:57.764[main]INFO org.apache.catalina.core.StandardEngine-Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-09-0118:07:57.997[main]INFO o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]-Initializing Spring embedded WebApplicationContext
2020-09-0118:07:57.997[main]INFO o.s.b.w.s.c.ServletWebServerApplicationContext-Root WebApplicationContext: initialization completed in 1677 ms
2020-09-0118:07:58.135[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskExecutor-Initializing ExecutorService 'applicationTaskExecutor'
2020-09-0118:07:58.175[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskScheduler-Initializing ExecutorService 'taskScheduler'
2020-09-0118:07:58.185[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Starting...
2020-09-0118:07:58.293[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Start completed.
2020-09-0118:07:58.332[task-1]INFO org.hibernate.jpa.internal.util.LogHelper-HHH000204: Processing PersistenceUnitInfo [name: default]
2020-09-0118:07:58.381[task-1]INFO org.hibernate.Version-HHH000412: Hibernate ORM core version 5.4.20.Final
2020-09-0118:07:58.424[main]WARN o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration-spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-09-0118:07:58.534[task-1]INFO org.hibernate.annotations.common.Version-HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-09-0118:07:58.538[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-09-0118:07:58.650[task-1]INFO org.hibernate.dialect.Dialect-HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-09-0118:08:00.070[task-1]INFO o.h.e.t.jta.platform.internal.JtaPlatformInitiator-HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-09-0118:08:00.090[task-1]INFO o.s.orm.jpa.LocalContainerEntityManagerFactoryBean-Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-0118:08:00.429[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-09-0118:08:01.113[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskExecutor-Initializing ExecutorService
2020-09-0118:08:01.402[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-09-0118:08:01.403[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-0118:08:01.426[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-09-0118:08:01.428[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-0118:08:02.985[main]WARN o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger-You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-09-0118:08:03.066[main]INFO o.s.c.f.context.catalog.SimpleFunctionRegistry-Looking up function '' with acceptedOutputTypes: []
2020-09-0118:08:03.272[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel errorChannel
2020-09-0118:08:03.337[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel nullChannel
2020-09-0118:08:03.359[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageHandler errorLogger
2020-09-0118:08:03.405[main]INFO o.s.integration.endpoint.EventDrivenConsumer-Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2020-09-0118:08:03.406[main]INFO o.s.integration.channel.PublishSubscribeChannel-Channel 'application-1.errorChannel' has 1 subscriber(s).
2020-09-0118:08:03.406[main]INFO o.s.integration.endpoint.EventDrivenConsumer-started bean '_org.springframework.integration.errorLogger'
2020-09-0118:08:03.419[main]INFO o.s.cloud.netflix.eureka.InstanceInfoFactory-Setting initial instance status as: STARTING
2020-09-0118:08:03.461[main]INFO com.netflix.discovery.DiscoveryClient-Initializing Eureka in region us-east-1
2020-09-0118:08:03.555[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using JSON encoding codec LegacyJacksonJson
2020-09-0118:08:03.555[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using JSON decoding codec LegacyJacksonJson
2020-09-0118:08:03.716[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using XML encoding codec XStreamXml
2020-09-0118:08:03.717[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using XML decoding codec XStreamXml
2020-09-0118:08:03.920[main]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0118:08:03.983[main]INFO com.netflix.discovery.DiscoveryClient-Disable delta property : false
2020-09-0118:08:03.983[main]INFO com.netflix.discovery.DiscoveryClient-Single vip registry refresh property : null
2020-09-0118:08:03.983[main]INFO com.netflix.discovery.DiscoveryClient-Force full registry fetch : false
2020-09-0118:08:03.984[main]INFO com.netflix.discovery.DiscoveryClient-Application is null : false
2020-09-0118:08:03.984[main]INFO com.netflix.discovery.DiscoveryClient-Registered Applications size is zero : true
2020-09-0118:08:03.984[main]INFO com.netflix.discovery.DiscoveryClient-Application version is -1: true
2020-09-0118:08:03.984[main]INFO com.netflix.discovery.DiscoveryClient-Getting all instance registry info from the eureka server
2020-09-0118:08:04.201[main]INFO com.netflix.discovery.DiscoveryClient-The response status is 200
2020-09-0118:08:04.205[main]INFO com.netflix.discovery.DiscoveryClient-Starting heartbeat executor: renew interval is: 30
2020-09-0118:08:04.208[main]INFO com.netflix.discovery.InstanceInfoReplicator-InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-09-0118:08:04.212[main]INFO com.netflix.discovery.DiscoveryClient-Discovery Client initialized at timestamp 1598954884211 with initial instances count: 1
2020-09-0118:08:04.215[main]INFO o.s.c.n.e.serviceregistry.EurekaServiceRegistry-Registering application ORDER with eureka with status UP
2020-09-0118:08:04.215[main]INFO com.netflix.discovery.DiscoveryClient-Saw local status change event StatusChangeEvent [timestamp=1598954884215, current=UP, previous=STARTING]
2020-09-0118:08:04.217[DiscoveryClient-InstanceInfoReplicator-0]INFO com.netflix.discovery.DiscoveryClient-DiscoveryClient_ORDER/DESKTOP-B4REUBC:order:8082: registering service...
2020-09-0118:08:04.220[main]INFO org.apache.coyote.http11.Http11NioProtocol-Starting ProtocolHandler ["http-nio-8082"]
2020-09-0118:08:04.249[main]INFO o.s.boot.web.embedded.tomcat.TomcatWebServer-Tomcat started on port(s): 8082 (http) with context path ''
2020-09-0118:08:04.251[main]INFO o.s.c.n.e.s.EurekaAutoServiceRegistration-Updating port to 8082
2020-09-0118:08:04.283[DiscoveryClient-InstanceInfoReplicator-0]INFO com.netflix.discovery.DiscoveryClient-DiscoveryClient_ORDER/DESKTOP-B4REUBC:order:8082 - registration status: 204
2020-09-0118:08:04.438[main]INFO o.s.a.rabbit.connection.CachingConnectionFactory-Attempting to connect to: [192.168.205.188:5672]
2020-09-0118:08:04.509[main]INFO o.s.a.rabbit.connection.CachingConnectionFactory-Created new connection: rabbitConnectionFactory#38dc1c50:0/SimpleConnection@655008a2 [delegate=amqp://root@192.168.205.188:5672/, localPort= 17285]
2020-09-0118:08:04.516[main]INFO org.springframework.amqp.rabbit.core.RabbitAdmin-Auto-declaring a non-durable, auto-delete, or exclusive Queue (GuoMq) durable:true, auto-delete:true, exclusive:false. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
2020-09-0118:08:04.516[main]INFO org.springframework.amqp.rabbit.core.RabbitAdmin-Auto-declaring a non-durable, auto-delete, or exclusive Queue (BhqMq) durable:true, auto-delete:true, exclusive:false. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
2020-09-0118:08:04.516[main]INFO org.springframework.amqp.rabbit.core.RabbitAdmin-Auto-declaring a non-durable, auto-delete, or exclusive Queue (productinfo) durable:true, auto-delete:true, exclusive:false. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
2020-09-0118:08:04.608[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-09-0118:08:04.609[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-09-0118:08:04.619[main]INFO com.ldh.order.OrderApplication-Started OrderApplication in 9.311 seconds (JVM running for 10.387)
2020-09-0118:10:57.894[http-nio-8082-exec-1]INFO o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]-Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-0118:10:57.894[http-nio-8082-exec-1]INFO org.springframework.web.servlet.DispatcherServlet-Initializing Servlet 'dispatcherServlet'
2020-09-0118:10:57.903[http-nio-8082-exec-1]INFO org.springframework.web.servlet.DispatcherServlet-Completed initialization in 9 ms
2020-09-0118:10:58.053[http-nio-8082-exec-1]INFO com.netflix.config.ChainedDynamicProperty-Flipping property: product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-0118:10:58.077[http-nio-8082-exec-1]INFO com.netflix.util.concurrent.ShutdownEnabledTimer-Shutdown hook installed for: NFLoadBalancer-PingTimer-product
2020-09-0118:10:58.078[http-nio-8082-exec-1]INFO com.netflix.loadbalancer.BaseLoadBalancer-Client: product instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=product,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-09-0118:10:58.084[http-nio-8082-exec-1]INFO c.n.loadbalancer.DynamicServerListLoadBalancer-Using serverListUpdater PollingServerListUpdater
2020-09-0118:10:58.107[http-nio-8082-exec-1]INFO com.netflix.config.ChainedDynamicProperty-Flipping property: product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-0118:10:58.109[http-nio-8082-exec-1]INFO c.n.loadbalancer.DynamicServerListLoadBalancer-DynamicServerListLoadBalancer for client product initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=product,current list of Servers=[DESKTOP-B4REUBC:8081],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-B4REUBC:8081;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1eb2a077
2020-09-0118:10:58.126[http-nio-8082-exec-1]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-09-0118:10:58.126[http-nio-8082-exec-1]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-09-0118:10:59.091[PollingServerListUpdater-0]INFO com.netflix.config.ChainedDynamicProperty-Flipping property: product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-0118:13:03.987[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0118:18:03.988[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0118:23:03.989[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0118:28:03.991[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0118:33:03.993[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0118:38:03.994[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0118:43:03.996[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0118:48:04.000[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0118:53:04.002[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0118:58:04.004[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0119:03:04.008[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0119:08:04.010[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0119:13:04.011[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0119:18:04.013[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0119:25:53.053[background-preinit]INFO org.hibernate.validator.internal.util.Version-HV000001: Hibernate Validator 6.1.5.Final
2020-09-0119:25:53.683[main]INFO com.ldh.order.OrderApplication-No active profile set, falling back to default profiles: default
2020-09-0119:25:54.360[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-0119:25:54.360[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-09-0119:25:54.453[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Finished Spring Data repository scanning in 85ms. Found 2 JPA repository interfaces.
2020-09-0119:25:54.494[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-0119:25:54.498[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-0119:25:54.544[main]INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport-Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ldh.order.repository.OrderDetailRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-09-0119:25:54.545[main]INFO o.s.d.r.c.RepositoryConfigurationExtensionSupport-Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ldh.order.repository.OrderMasterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-09-0119:25:54.546[main]INFO o.s.d.r.config.RepositoryConfigurationDelegate-Finished Spring Data repository scanning in 21ms. Found 0 Redis repository interfaces.
2020-09-0119:25:55.124[main]INFO o.springframework.cloud.context.scope.GenericScope-BeanFactory id=71bce341-72f3-34f7-afa9-bd76c2b49439
2020-09-0119:25:55.138[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2020-09-0119:25:55.145[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2020-09-0119:25:55.153[main]INFO o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor-No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2020-09-0119:25:55.181[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'com.ldh.product.client.ProductClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0119:25:55.450[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0119:25:55.454[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration' of type [org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationJmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0119:25:55.482[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' of type [org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0119:25:55.490[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'mbeanServer' of type [com.sun.jmx.mbeanserver.JmxMBeanServer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0119:25:55.564[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'integrationChannelResolver' of type [org.springframework.integration.support.channel.BeanFactoryChannelResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0119:25:55.566[main]INFO o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-0119:25:56.238[main]INFO o.s.boot.web.embedded.tomcat.TomcatWebServer-Tomcat initialized with port(s): 8082 (http)
2020-09-0119:25:56.245[main]INFO org.apache.coyote.http11.Http11NioProtocol-Initializing ProtocolHandler ["http-nio-8082"]
2020-09-0119:25:56.246[main]INFO org.apache.catalina.core.StandardService-Starting service [Tomcat]
2020-09-0119:25:56.246[main]INFO org.apache.catalina.core.StandardEngine-Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-09-0119:25:56.401[main]INFO o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]-Initializing Spring embedded WebApplicationContext
2020-09-0119:25:56.401[main]INFO o.s.b.w.s.c.ServletWebServerApplicationContext-Root WebApplicationContext: initialization completed in 2703 ms
2020-09-0119:25:56.653[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskExecutor-Initializing ExecutorService 'applicationTaskExecutor'
2020-09-0119:25:56.699[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskScheduler-Initializing ExecutorService 'taskScheduler'
2020-09-0119:25:56.709[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Starting...
2020-09-0119:25:56.815[main]INFO com.zaxxer.hikari.HikariDataSource-HikariPool-1 - Start completed.
2020-09-0119:25:56.858[task-1]INFO org.hibernate.jpa.internal.util.LogHelper-HHH000204: Processing PersistenceUnitInfo [name: default]
2020-09-0119:25:56.924[task-1]INFO org.hibernate.Version-HHH000412: Hibernate ORM core version 5.4.20.Final
2020-09-0119:25:56.982[main]WARN o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration-spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-09-0119:25:57.106[task-1]INFO org.hibernate.annotations.common.Version-HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-09-0119:25:57.109[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-09-0119:25:57.244[task-1]INFO org.hibernate.dialect.Dialect-HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-09-0119:25:57.960[task-1]INFO o.h.e.t.jta.platform.internal.JtaPlatformInitiator-HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-09-0119:25:57.968[task-1]INFO o.s.orm.jpa.LocalContainerEntityManagerFactoryBean-Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-0119:25:58.150[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-09-0119:25:58.441[main]INFO o.s.scheduling.concurrent.ThreadPoolTaskExecutor-Initializing ExecutorService
2020-09-0119:25:58.516[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-09-0119:25:58.516[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-0119:25:58.519[main]WARN com.netflix.config.sources.URLConfigurationSource-No URLs will be polled as dynamic configuration sources.
2020-09-0119:25:58.520[main]INFO com.netflix.config.sources.URLConfigurationSource-To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-0119:25:59.593[main]WARN o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger-You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-09-0119:25:59.677[main]INFO o.s.c.f.context.catalog.SimpleFunctionRegistry-Looking up function '' with acceptedOutputTypes: []
2020-09-0119:25:59.896[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel errorChannel
2020-09-0119:25:59.959[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageChannel nullChannel
2020-09-0119:25:59.973[main]INFO o.s.integration.monitor.IntegrationMBeanExporter-Registering MessageHandler errorLogger
2020-09-0119:26:00.004[main]INFO o.s.integration.endpoint.EventDrivenConsumer-Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2020-09-0119:26:00.004[main]INFO o.s.integration.channel.PublishSubscribeChannel-Channel 'application-1.errorChannel' has 1 subscriber(s).
2020-09-0119:26:00.004[main]INFO o.s.integration.endpoint.EventDrivenConsumer-started bean '_org.springframework.integration.errorLogger'
2020-09-0119:26:00.013[main]INFO o.s.cloud.netflix.eureka.InstanceInfoFactory-Setting initial instance status as: STARTING
2020-09-0119:26:00.038[main]INFO com.netflix.discovery.DiscoveryClient-Initializing Eureka in region us-east-1
2020-09-0119:26:00.093[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using JSON encoding codec LegacyJacksonJson
2020-09-0119:26:00.093[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using JSON decoding codec LegacyJacksonJson
2020-09-0119:26:00.196[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using XML encoding codec XStreamXml
2020-09-0119:26:00.197[main]INFO c.n.discovery.provider.DiscoveryJerseyProvider-Using XML decoding codec XStreamXml
2020-09-0119:26:00.331[main]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0119:26:00.372[main]INFO com.netflix.discovery.DiscoveryClient-Disable delta property : false
2020-09-0119:26:00.373[main]INFO com.netflix.discovery.DiscoveryClient-Single vip registry refresh property : null
2020-09-0119:26:00.373[main]INFO com.netflix.discovery.DiscoveryClient-Force full registry fetch : false
2020-09-0119:26:00.373[main]INFO com.netflix.discovery.DiscoveryClient-Application is null : false
2020-09-0119:26:00.373[main]INFO com.netflix.discovery.DiscoveryClient-Registered Applications size is zero : true
2020-09-0119:26:00.373[main]INFO com.netflix.discovery.DiscoveryClient-Application version is -1: true
2020-09-0119:26:00.373[main]INFO com.netflix.discovery.DiscoveryClient-Getting all instance registry info from the eureka server
2020-09-0119:26:00.500[main]INFO com.netflix.discovery.DiscoveryClient-The response status is 200
2020-09-0119:26:00.502[main]INFO com.netflix.discovery.DiscoveryClient-Starting heartbeat executor: renew interval is: 30
2020-09-0119:26:00.503[main]INFO com.netflix.discovery.InstanceInfoReplicator-InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-09-0119:26:00.507[main]INFO com.netflix.discovery.DiscoveryClient-Discovery Client initialized at timestamp 1598959560505 with initial instances count: 2
2020-09-0119:26:00.509[main]INFO o.s.c.n.e.serviceregistry.EurekaServiceRegistry-Registering application ORDER with eureka with status UP
2020-09-0119:26:00.509[main]INFO com.netflix.discovery.DiscoveryClient-Saw local status change event StatusChangeEvent [timestamp=1598959560509, current=UP, previous=STARTING]
2020-09-0119:26:00.511[DiscoveryClient-InstanceInfoReplicator-0]INFO com.netflix.discovery.DiscoveryClient-DiscoveryClient_ORDER/DESKTOP-B4REUBC:order:8082: registering service...
2020-09-0119:26:00.511[main]INFO org.apache.coyote.http11.Http11NioProtocol-Starting ProtocolHandler ["http-nio-8082"]
2020-09-0119:26:00.538[main]INFO o.s.boot.web.embedded.tomcat.TomcatWebServer-Tomcat started on port(s): 8082 (http) with context path ''
2020-09-0119:26:00.538[main]INFO o.s.c.n.e.s.EurekaAutoServiceRegistration-Updating port to 8082
2020-09-0119:26:00.542[DiscoveryClient-InstanceInfoReplicator-0]INFO com.netflix.discovery.DiscoveryClient-DiscoveryClient_ORDER/DESKTOP-B4REUBC:order:8082 - registration status: 204
2020-09-0119:26:00.606[main]INFO o.s.a.rabbit.connection.CachingConnectionFactory-Attempting to connect to: [192.168.205.188:5672]
2020-09-0119:26:00.635[main]INFO o.s.a.rabbit.connection.CachingConnectionFactory-Created new connection: rabbitConnectionFactory#737ae41a:0/SimpleConnection@7641d70 [delegate=amqp://root@192.168.205.188:5672/, localPort= 19758]
2020-09-0119:26:00.639[main]INFO org.springframework.amqp.rabbit.core.RabbitAdmin-Auto-declaring a non-durable, auto-delete, or exclusive Queue (BhqMq) durable:true, auto-delete:true, exclusive:false. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
2020-09-0119:26:00.639[main]INFO org.springframework.amqp.rabbit.core.RabbitAdmin-Auto-declaring a non-durable, auto-delete, or exclusive Queue (GuoMq) durable:true, auto-delete:true, exclusive:false. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
2020-09-0119:26:00.639[main]INFO org.springframework.amqp.rabbit.core.RabbitAdmin-Auto-declaring a non-durable, auto-delete, or exclusive Queue (productinfo) durable:true, auto-delete:true, exclusive:false. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
2020-09-0119:26:00.716[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Triggering deferred initialization of Spring Data repositories…
2020-09-0119:26:00.717[main]INFO o.s.d.r.c.DeferredRepositoryInitializationListener-Spring Data repositories initialized!
2020-09-0119:26:00.726[main]INFO com.ldh.order.OrderApplication-Started OrderApplication in 8.343 seconds (JVM running for 9.786)
2020-09-0119:31:00.375[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0119:36:00.377[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0119:41:00.379[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
2020-09-0119:46:00.381[AsyncResolver-bootstrap-executor-0]INFO c.n.d.shared.resolver.aws.ConfigClusterResolver-Resolving eureka endpoints via configuration
